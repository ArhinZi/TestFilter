; Listing generated by Microsoft (R) Optimizing Compiler Version 15.00.30729.01 

include listing.inc

INCLUDELIB LIBCMTD
INCLUDELIB OLDNAMES

_DATA	SEGMENT
pwszDevicePowerStateV DQ FLAT:$SG70845
	DQ	FLAT:$SG70846
	DQ	FLAT:$SG70847
	DQ	FLAT:$SG70848
	DQ	FLAT:$SG70849
	DQ	FLAT:$SG70850
pwszDeviceRelationTypeV DQ FLAT:$SG70852
	DQ	FLAT:$SG70853
	DQ	FLAT:$SG70854
	DQ	FLAT:$SG70855
	DQ	FLAT:$SG70856
	DQ	FLAT:$SG70857
pwszFsInfoClassV DQ FLAT:$SG70859
	DQ	FLAT:$SG70860
	DQ	FLAT:$SG70861
	DQ	FLAT:$SG70862
	DQ	FLAT:$SG70863
	DQ	FLAT:$SG70864
	DQ	FLAT:$SG70865
	DQ	FLAT:$SG70866
	DQ	FLAT:$SG70867
	DQ	FLAT:$SG70868
pwszPowerActionV DQ FLAT:$SG70870
	DQ	FLAT:$SG70871
	DQ	FLAT:$SG70872
	DQ	FLAT:$SG70873
	DQ	FLAT:$SG70874
	DQ	FLAT:$SG70875
	DQ	FLAT:$SG70876
	DQ	FLAT:$SG70877
pwszPowerStateTypeV DQ FLAT:$SG70879
	DQ	FLAT:$SG70880
pwszSystemPowerStateV DQ FLAT:$SG70882
	DQ	FLAT:$SG70883
	DQ	FLAT:$SG70884
	DQ	FLAT:$SG70885
	DQ	FLAT:$SG70886
	DQ	FLAT:$SG70887
	DQ	FLAT:$SG70888
	DQ	FLAT:$SG70889
_DATA	ENDS
CONST	SEGMENT
$SG69013 DB	00H
	ORG $+3
$SG69027 DB	00H, 00H
	ORG $+2
$SG70845 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'U', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'f', 00H
	DB	'i', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG70846 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'D', 00H, '0'
	DB	00H, 00H, 00H
	ORG $+4
$SG70847 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'D', 00H, '1'
	DB	00H, 00H, 00H
	ORG $+4
$SG70848 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'D', 00H, '2'
	DB	00H, 00H, 00H
	ORG $+4
$SG70849 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'D', 00H, '3'
	DB	00H, 00H, 00H
	ORG $+4
$SG70850 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'D', 00H
	DB	'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'M', 00H, 'a'
	DB	00H, 'x', 00H, 'i', 00H, 'm', 00H, 'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG70852 DB	'B', 00H, 'u', 00H, 's', 00H, 'R', 00H, 'e', 00H, 'l', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H
	DB	00H
	ORG $+6
$SG70853 DB	'E', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'R', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 't'
	DB	00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+4
$SG70854 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'R', 00H
	DB	'e', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 's', 00H, 00H, 00H
	ORG $+2
$SG70855 DB	'R', 00H, 'e', 00H, 'm', 00H, 'o', 00H, 'v', 00H, 'a', 00H
	DB	'l', 00H, 'R', 00H, 'e', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+6
$SG70856 DB	'T', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'e', 00H, 't', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'R'
	DB	00H, 'e', 00H, 'l', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, 00H, 00H
	ORG $+6
$SG70857 DB	'S', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 'l', 00H, 'e', 00H
	DB	'B', 00H, 'u', 00H, 's', 00H, 'R', 00H, 'e', 00H, 'l', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, 00H, 00H
	ORG $+2
$SG70859 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'V', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+8
$SG70860 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'L', 00H, 'a', 00H, 'b', 00H, 'e', 00H, 'l', 00H, 'I', 00H, 'n'
	DB	00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H
	DB	'i', 00H, 'o', 00H, 'n', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e'
	DB	00H, 'F', 00H, 's', 00H, 'S', 00H, 'i', 00H, 'z', 00H, 'e', 00H
	DB	'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG70861 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
$SG70862 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'A', 00H, 't', 00H, 't', 00H, 'r', 00H, 'i', 00H, 'b', 00H, 'u'
	DB	00H, 't', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, 00H, 00H
	ORG $+2
$SG70863 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG70864 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'F', 00H, 'u', 00H, 'l', 00H, 'l', 00H, 'S', 00H, 'i', 00H, 'z'
	DB	00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H
	DB	00H
	ORG $+4
$SG70865 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'I'
	DB	00H, 'd', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H
	DB	'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H
	DB	00H
	ORG $+4
$SG70866 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'D', 00H, 'r', 00H, 'i', 00H, 'v', 00H, 'e', 00H, 'r', 00H, 'P'
	DB	00H, 'a', 00H, 't', 00H, 'h', 00H, 'I', 00H, 'n', 00H, 'f', 00H
	DB	'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o'
	DB	00H, 'n', 00H, 00H, 00H
$SG70867 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'V', 00H, 'o', 00H, 'l', 00H, 'u', 00H, 'm', 00H, 'e', 00H, 'F'
	DB	00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, 'I', 00H, 'n', 00H
	DB	'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i'
	DB	00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG70868 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'F', 00H, 's', 00H
	DB	'M', 00H, 'a', 00H, 'x', 00H, 'i', 00H, 'm', 00H, 'u', 00H, 'm'
	DB	00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 00H, 00H
	ORG $+6
$SG70870 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'N', 00H, 'o'
	DB	00H, 'n', 00H, 'e', 00H, 00H, 00H
$SG70871 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'R', 00H, 'e'
	DB	00H, 's', 00H, 'e', 00H, 'r', 00H, 'v', 00H, 'e', 00H, 'd', 00H
	DB	00H, 00H
$SG70872 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 'l'
	DB	00H, 'e', 00H, 'e', 00H, 'p', 00H, 00H, 00H
	ORG $+6
$SG70873 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'H', 00H, 'i'
	DB	00H, 'b', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG70874 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 'h'
	DB	00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	00H, 00H
$SG70875 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 'h'
	DB	00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'R', 00H, 'e', 00H, 's', 00H, 'e', 00H, 't', 00H, 00H, 00H
	ORG $+6
$SG70876 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'S', 00H, 'h'
	DB	00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	'O', 00H, 'f', 00H, 'f', 00H, 00H, 00H
	ORG $+2
$SG70877 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'A', 00H
	DB	'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'W', 00H, 'a'
	DB	00H, 'r', 00H, 'm', 00H, 'E', 00H, 'j', 00H, 'e', 00H, 'c', 00H
	DB	't', 00H, 00H, 00H
	ORG $+6
$SG70879 DB	'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H
	DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG70880 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H, 't'
	DB	00H, 'a', 00H, 't', 00H, 'e', 00H, 00H, 00H
	ORG $+6
$SG70882 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'U', 00H, 'n'
	DB	00H, 's', 00H, 'p', 00H, 'e', 00H, 'c', 00H, 'i', 00H, 'f', 00H
	DB	'i', 00H, 'e', 00H, 'd', 00H, 00H, 00H
	ORG $+2
$SG70883 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'W', 00H, 'o'
	DB	00H, 'r', 00H, 'k', 00H, 'i', 00H, 'n', 00H, 'g', 00H, 00H, 00H
	ORG $+2
$SG70884 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'S', 00H, 'l'
	DB	00H, 'e', 00H, 'e', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'1', 00H, 00H, 00H
	ORG $+6
$SG70885 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'S', 00H, 'l'
	DB	00H, 'e', 00H, 'e', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'2', 00H, 00H, 00H
	ORG $+6
$SG70886 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'S', 00H, 'l'
	DB	00H, 'e', 00H, 'e', 00H, 'p', 00H, 'i', 00H, 'n', 00H, 'g', 00H
	DB	'3', 00H, 00H, 00H
	ORG $+6
$SG70887 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'H', 00H, 'i'
	DB	00H, 'b', 00H, 'e', 00H, 'r', 00H, 'n', 00H, 'a', 00H, 't', 00H
	DB	'e', 00H, 00H, 00H
	ORG $+6
$SG70888 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'S', 00H, 'h'
	DB	00H, 'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H
	DB	00H, 00H
$SG70889 DB	'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S', 00H
	DB	'y', 00H, 's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'M', 00H, 'a'
	DB	00H, 'x', 00H, 'i', 00H, 'm', 00H, 'u', 00H, 'm', 00H, 00H, 00H
	ORG $+2
$SG71019 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'C', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'S', 00H
	DB	'e', 00H, 'c', 00H, 'u', 00H, 'r', 00H, 'i', 00H, 't', 00H, 'y'
	DB	00H, 'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'e', 00H, 'x', 00H
	DB	't', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71021 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'C', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'O', 00H
	DB	'p', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71023 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'C', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'F', 00H
	DB	'i', 00H, 'l', 00H, 'e', 00H, 'A', 00H, 't', 00H, 't', 00H, 'r'
	DB	00H, 'i', 00H, 'b', 00H, 'u', 00H, 't', 00H, 'e', 00H, 's', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71025 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'C', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'S', 00H
	DB	'h', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 'A', 00H, 'c', 00H, 'c'
	DB	00H, 'e', 00H, 's', 00H, 's', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71027 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'C', 00H, 'r'
	DB	00H, 'e', 00H, 'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'E', 00H
	DB	'a', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h'
	DB	00H, 09H, 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	'%', 00H, '#', 00H, 'x', 00H, 00H, 00H
	ORG $+14
$SG71038 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I', 00H, 'o', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, '.', 00H, 'O', 00H, 'u', 00H, 't', 00H, 'p', 00H, 'u', 00H
	DB	't', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71040 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I', 00H, 'o', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, '.', 00H, 'I', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H
	DB	'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, 'L'
	DB	00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71042 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I', 00H, 'o', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, '.', 00H, 'I', 00H, 'o', 00H, 'C', 00H, 'o', 00H, 'n', 00H
	DB	't', 00H, 'r', 00H, 'o', 00H, 'l', 00H, 'C', 00H, 'o', 00H, 'd'
	DB	00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71044 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'D', 00H, 'e'
	DB	00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H, 'I', 00H, 'o', 00H
	DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H, 'l'
	DB	00H, '.', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, '3', 00H
	DB	'I', 00H, 'n', 00H, 'p', 00H, 'u', 00H, 't', 00H, 'B', 00H, 'u'
	DB	00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71056 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'Q', 00H, 'u'
	DB	00H, 'e', 00H, 'r', 00H, 'y', 00H, 'D', 00H, 'e', 00H, 'v', 00H
	DB	'i', 00H, 'c', 00H, 'e', 00H, 'R', 00H, 'e', 00H, 'l', 00H, 'a'
	DB	00H, 't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 's', 00H, '.', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71067 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'Q', 00H, 'u'
	DB	00H, 'e', 00H, 'r', 00H, 'y', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '.', 00H, 'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't'
	DB	00H, 'h', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71069 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'Q', 00H, 'u'
	DB	00H, 'e', 00H, 'r', 00H, 'y', 00H, 'F', 00H, 'i', 00H, 'l', 00H
	DB	'e', 00H, '.', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71081 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'P', 00H, 'o'
	DB	00H, 'w', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'S', 00H, 'y', 00H
	DB	's', 00H, 't', 00H, 'e', 00H, 'm', 00H, 'C', 00H, 'o', 00H, 'n'
	DB	00H, 't', 00H, 'e', 00H, 'x', 00H, 't', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71083 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'P', 00H, 'o'
	DB	00H, 'w', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'T', 00H, 'y', 00H
	DB	'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71085 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'P', 00H, 'o'
	DB	00H, 'w', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'S', 00H, 'y', 00H, 's'
	DB	00H, 't', 00H, 'e', 00H, 'm', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71087 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'P', 00H, 'o'
	DB	00H, 'w', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'S', 00H, 't', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, '.', 00H, 'D', 00H, 'e', 00H, 'v'
	DB	00H, 'i', 00H, 'c', 00H, 'e', 00H, 'S', 00H, 't', 00H, 'a', 00H
	DB	't', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71089 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'P', 00H, 'o'
	DB	00H, 'w', 00H, 'e', 00H, 'r', 00H, '.', 00H, 'S', 00H, 'h', 00H
	DB	'u', 00H, 't', 00H, 'd', 00H, 'o', 00H, 'w', 00H, 'n', 00H, 'T'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71101 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'Q', 00H, 'u'
	DB	00H, 'e', 00H, 'r', 00H, 'y', 00H, 'V', 00H, 'o', 00H, 'l', 00H
	DB	'u', 00H, 'm', 00H, 'e', 00H, '.', 00H, 'F', 00H, 's', 00H, 'I'
	DB	00H, 'n', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H
	DB	't', 00H, 'i', 00H, 'o', 00H, 'n', 00H, 'C', 00H, 'l', 00H, 'a'
	DB	00H, 's', 00H, 's', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71112 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'R', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, '.', 00H, 'L', 00H, 'e', 00H, 'n', 00H
	DB	'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71114 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'R', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, '.', 00H, 'K', 00H, 'e', 00H, 'y', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71116 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'R', 00H, 'e'
	DB	00H, 'a', 00H, 'd', 00H, '.', 00H, 'B', 00H, 'y', 00H, 't', 00H
	DB	'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e', 00H, 't'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'I', 00H, '6'
	DB	00H, '4', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG71127 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'L', 00H, 'e', 00H, 'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71129 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'I', 00H, 'n', 00H, 'f'
	DB	00H, 'o', 00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H
	DB	'o', 00H, 'n', 00H, 'C', 00H, 'l', 00H, 'a', 00H, 's', 00H, 's'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71131 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H, 'j'
	DB	00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71133 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'R', 00H, 'e', 00H, 'p', 00H, 'l', 00H, 'a', 00H, 'c', 00H, 'e'
	DB	00H, 'I', 00H, 'f', 00H, 'E', 00H, 'x', 00H, 'i', 00H, 's', 00H
	DB	't', 00H, 's', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71135 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'A', 00H, 'd', 00H, 'v', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e'
	DB	00H, 'O', 00H, 'n', 00H, 'l', 00H, 'y', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71137 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'C', 00H, 'l', 00H, 'u', 00H, 's', 00H, 't', 00H, 'e', 00H, 'r'
	DB	00H, 'C', 00H, 'o', 00H, 'u', 00H, 'n', 00H, 't', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71139 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'S', 00H, 'e'
	DB	00H, 't', 00H, 'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, '.', 00H
	DB	'D', 00H, 'e', 00H, 'l', 00H, 'e', 00H, 't', 00H, 'e', 00H, 'H'
	DB	00H, 'a', 00H, 'n', 00H, 'd', 00H, 'l', 00H, 'e', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71151 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'W', 00H, 'a'
	DB	00H, 'i', 00H, 't', 00H, 'W', 00H, 'a', 00H, 'k', 00H, 'e', 00H
	DB	'.', 00H, 'P', 00H, 'o', 00H, 'w', 00H, 'e', 00H, 'r', 00H, 'S'
	DB	00H, 't', 00H, 'a', 00H, 't', 00H, 'e', 00H, ' ', 00H, '=', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71162 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'W', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, '.', 00H, 'L', 00H, 'e', 00H
	DB	'n', 00H, 'g', 00H, 't', 00H, 'h', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71164 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'W', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, '.', 00H, 'K', 00H, 'e', 00H
	DB	'y', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71166 DB	'P', 00H, 'a', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 's', 00H, '.', 00H, 'W', 00H, 'r'
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, '.', 00H, 'B', 00H, 'y', 00H
	DB	't', 00H, 'e', 00H, 'O', 00H, 'f', 00H, 'f', 00H, 's', 00H, 'e'
	DB	00H, 't', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'I', 00H, '6'
	DB	00H, '4', 00H, 'x', 00H, 00H, 00H
	ORG $+2
$SG71215 DB	'M', 00H, 'a', 00H, 'j', 00H, 'o', 00H, 'r', 00H, 'F', 00H
	DB	'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71219 DB	'M', 00H, 'i', 00H, 'n', 00H, 'o', 00H, 'r', 00H, 'F', 00H
	DB	'u', 00H, 'n', 00H, 'c', 00H, 't', 00H, 'i', 00H, 'o', 00H, 'n'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 's', 00H, 00H, 00H
	ORG $+10
$SG71222 DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71228 DB	'C', 00H, 'o', 00H, 'n', 00H, 't', 00H, 'r', 00H, 'o', 00H
	DB	'l', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71236 DB	'D', 00H, 'e', 00H, 'v', 00H, 'i', 00H, 'c', 00H, 'e', 00H
	DB	'O', 00H, 'b', 00H, 'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' '
	DB	00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71242 DB	'F', 00H, 'i', 00H, 'l', 00H, 'e', 00H, 'O', 00H, 'b', 00H
	DB	'j', 00H, 'e', 00H, 'c', 00H, 't', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71268 DB	'M', 00H, 'd', 00H, 'l', 00H, 'A', 00H, 'd', 00H, 'd', 00H
	DB	'r', 00H, 'e', 00H, 's', 00H, 's', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71276 DB	'F', 00H, 'l', 00H, 'a', 00H, 'g', 00H, 's', 00H, ' ', 00H
	DB	'=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71282 DB	'A', 00H, 's', 00H, 's', 00H, 'o', 00H, 'c', 00H, 'i', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'I', 00H, 'r', 00H, 'p'
	DB	00H, '.', 00H, 'M', 00H, 'a', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'r', 00H, 'I', 00H, 'r', 00H, 'p', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71288 DB	'A', 00H, 's', 00H, 's', 00H, 'o', 00H, 'c', 00H, 'i', 00H
	DB	'a', 00H, 't', 00H, 'e', 00H, 'd', 00H, 'I', 00H, 'r', 00H, 'p'
	DB	00H, '.', 00H, 'S', 00H, 'y', 00H, 's', 00H, 't', 00H, 'e', 00H
	DB	'm', 00H, 'B', 00H, 'u', 00H, 'f', 00H, 'f', 00H, 'e', 00H, 'r'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71294 DB	'I', 00H, 'o', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, '.', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't'
	DB	00H, 'u', 00H, 's', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71300 DB	'I', 00H, 'o', 00H, 'S', 00H, 't', 00H, 'a', 00H, 't', 00H
	DB	'u', 00H, 's', 00H, '.', 00H, 'I', 00H, 'n', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, 'a', 00H, 't', 00H, 'i', 00H, 'o', 00H
	DB	'n', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'x', 00H, 00H
	DB	00H
	ORG $+8
$SG71306 DB	'R', 00H, 'e', 00H, 'q', 00H, 'u', 00H, 'e', 00H, 's', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, 'M', 00H, 'o', 00H, 'd', 00H, 'e'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71312 DB	'P', 00H, 'e', 00H, 'n', 00H, 'd', 00H, 'i', 00H, 'n', 00H
	DB	'g', 00H, 'R', 00H, 'e', 00H, 't', 00H, 'u', 00H, 'r', 00H, 'n'
	DB	00H, 'e', 00H, 'd', 00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71318 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71324 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'I', 00H, 'r', 00H, 'q', 00H, 'l', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, 'd', 00H, 00H, 00H
	ORG $+10
$SG71330 DB	'C', 00H, 'a', 00H, 'n', 00H, 'c', 00H, 'e', 00H, 'l', 00H
	DB	'R', 00H, 'o', 00H, 'u', 00H, 't', 00H, 'i', 00H, 'n', 00H, 'e'
	DB	00H, ' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71336 DB	'U', 00H, 's', 00H, 'e', 00H, 'r', 00H, 'B', 00H, 'u', 00H
	DB	'f', 00H, 'f', 00H, 'e', 00H, 'r', 00H, ' ', 00H, '=', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
	ORG $+8
$SG71342 DB	'T', 00H, 'a', 00H, 'i', 00H, 'l', 00H, '.', 00H, 'O', 00H
	DB	'v', 00H, 'e', 00H, 'r', 00H, 'l', 00H, 'a', 00H, 'y', 00H, '.'
	DB	00H, 'T', 00H, 'h', 00H, 'r', 00H, 'e', 00H, 'a', 00H, 'd', 00H
	DB	' ', 00H, '=', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' '
	DB	00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H, ' ', 00H
	DB	' ', 00H, ' ', 00H, ' ', 00H, '%', 00H, '#', 00H, 'p', 00H, 00H
	DB	00H
CONST	ENDS
PUBLIC	?FormatIoStackWlhX64@@YAHPEADPEAPEA_W@Z		; FormatIoStackWlhX64
pdata	SEGMENT
$pdata$?FormatIoStackWlhX64@@YAHPEADPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?FormatIoStackWlhX64@@YAHPEADPEAPEA_W@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FormatIoStackWlhX64@@YAHPEADPEAPEA_W@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
; File b:\programm\wntsys\testfilter\release\1_1\source\krnlutils\wlhx64.cpp
xdata	ENDS
_TEXT	SEGMENT
pStackData$ = 48
ppFStack$ = 56
?FormatIoStackWlhX64@@YAHPEADPEAPEA_W@Z PROC		; FormatIoStackWlhX64

; 26   : {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 27   : 	return FormatIoStackGeneric(
; 28   : 		pStackData,
; 29   : 		ppFStack);

	mov	rdx, QWORD PTR ppFStack$[rsp]
	mov	rcx, QWORD PTR pStackData$[rsp]
	call	?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z ; FormatIoStackGeneric

; 30   : }

	add	rsp, 40					; 00000028H
	ret	0
?FormatIoStackWlhX64@@YAHPEADPEAPEA_W@Z ENDP		; FormatIoStackWlhX64
_TEXT	ENDS
PUBLIC	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z		; StringCbLengthW
PUBLIC	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ		; StringCbPrintfW
PUBLIC	__$ArrayPad$
EXTRN	__GSHandlerCheck:PROC
EXTRN	__imp_HeapFree:PROC
EXTRN	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z:PROC ; CopyToBuffer
EXTRN	MinorFunctionDes:PROC
EXTRN	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z:PROC	; AppendString
EXTRN	MajorFunctionDes:PROC
EXTRN	?AllocFromHeap@@YAPEAXPEAX_K@Z:PROC		; AllocFromHeap
EXTRN	__imp_GetProcessHeap:PROC
EXTRN	memcpy:PROC
EXTRN	__security_cookie:QWORD
EXTRN	__security_check_cookie:PROC
pdata	SEGMENT
$pdata$?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z DD imagerel ?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z
	DD	imagerel ?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z+1149
	DD	imagerel $unwind$?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z DD 022319H
	DD	04d0111H
	DD	imagerel __GSHandlerCheck
	DD	0258H
; Function compile flags: /Odtp
; File b:\programm\wntsys\testfilter\release\1_1\source\krnlutils\platfdepcompile.cpp
xdata	ENDS
_TEXT	SEGMENT
cbOffset$ = 48
cbItemLen$ = 56
hHeap$ = 64
wszItemBuf$ = 80
pFIoStack$ = 288
wszDecodeBuf$ = 304
bRet$ = 512
BufSize$ = 520
IoStack$ = 528
__$ArrayPad$ = 600
pIoStackData$ = 624
ppFStack$ = 632
?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z PROC		; FormatIoStackGeneric

; 911  : {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 616				; 00000268H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 912  : 	IO_STACK_LOCATION	IoStack;
; 913  : 
; 914  : 	memcpy(&IoStack, pIoStackData, sizeof IoStack);

	mov	r8d, 72					; 00000048H
	mov	rdx, QWORD PTR pIoStackData$[rsp]
	lea	rcx, QWORD PTR IoStack$[rsp]
	call	memcpy

; 915  : 
; 916  : 	HANDLE hHeap = GetProcessHeap();

	call	QWORD PTR __imp_GetProcessHeap
	mov	QWORD PTR hHeap$[rsp], rax

; 917  : 
; 918  : 	if (hHeap == NULL) return FALSE;

	cmp	QWORD PTR hHeap$[rsp], 0
	jne	SHORT $LN19@FormatIoSt
	xor	eax, eax
	jmp	$LN20@FormatIoSt
$LN19@FormatIoSt:

; 919  : 
; 920  : 	SIZE_T BufSize = FMTIRP_INITIAL_BUF_SIZE;

	mov	QWORD PTR BufSize$[rsp], 1024		; 00000400H

; 921  : 	PCHAR pFIoStack = (PCHAR) AllocFromHeap(hHeap, BufSize);

	mov	rdx, QWORD PTR BufSize$[rsp]
	mov	rcx, QWORD PTR hHeap$[rsp]
	call	?AllocFromHeap@@YAPEAXPEAX_K@Z		; AllocFromHeap
	mov	QWORD PTR pFIoStack$[rsp], rax

; 922  : 
; 923  : 	if (pFIoStack == NULL) return FALSE;

	cmp	QWORD PTR pFIoStack$[rsp], 0
	jne	SHORT $LN18@FormatIoSt
	xor	eax, eax
	jmp	$LN20@FormatIoSt
$LN18@FormatIoSt:

; 924  : 	
; 925  : 	BOOL bRet = FALSE;

	mov	DWORD PTR bRet$[rsp], 0

; 926  : 	SIZE_T cbOffset = 0;

	mov	QWORD PTR cbOffset$[rsp], 0

; 927  : 	WCHAR wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 928  : 	WCHAR wszDecodeBuf[FMTIRP_ITEM_BUF_SIZE];
; 929  : 	SIZE_T cbItemLen;
; 930  : 
; 931  : 	FORMAT_ITEM(
; 932  : 		wszItemBuf,
; 933  : 		L"MajorFunction =                                 %s",
; 934  : 		MajorFunctionDes(
; 935  : 			IoStack.MajorFunction,
; 936  : 			wszDecodeBuf,
; 937  : 			sizeof wszDecodeBuf),
; 938  : 		&pFIoStack,
; 939  : 		&cbOffset,
; 940  : 		&BufSize,
; 941  : 		hHeap,
; 942  : 		bRet)

	mov	r8d, 202				; 000000caH
	lea	rdx, QWORD PTR wszDecodeBuf$[rsp]
	movzx	ecx, BYTE PTR IoStack$[rsp]
	call	MajorFunctionDes
	mov	r9, rax
	lea	r8, OFFSET FLAT:$SG71215
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	lea	r9, QWORD PTR BufSize$[rsp]
	lea	r8, QWORD PTR cbOffset$[rsp]
	lea	rdx, QWORD PTR pFIoStack$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 943  : 	if (!bRet)

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN17@FormatIoSt
	jmp	$LN16@FormatIoSt

; 944  : 		goto CLEANUP;

	jmp	$CLEANUP$71217
$LN17@FormatIoSt:

; 945  : 
; 946  : 	FORMAT_ITEM(
; 947  : 		wszItemBuf,
; 948  : 		L"MinorFunction =                                 %s",
; 949  : 		MinorFunctionDes(
; 950  : 			IoStack.MajorFunction,
; 951  : 			IoStack.MinorFunction,
; 952  : 			wszDecodeBuf,
; 953  : 			sizeof wszDecodeBuf),
; 954  : 		&pFIoStack,
; 955  : 		&cbOffset,
; 956  : 		&BufSize,
; 957  : 		hHeap,
; 958  : 		bRet)

	mov	r9d, 202				; 000000caH
	lea	r8, QWORD PTR wszDecodeBuf$[rsp]
	movzx	edx, BYTE PTR IoStack$[rsp+1]
	movzx	ecx, BYTE PTR IoStack$[rsp]
	call	MinorFunctionDes
	mov	r9, rax
	lea	r8, OFFSET FLAT:$SG71219
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	lea	r9, QWORD PTR BufSize$[rsp]
	lea	r8, QWORD PTR cbOffset$[rsp]
	lea	rdx, QWORD PTR pFIoStack$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 959  : 	if (!bRet)

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN15@FormatIoSt
	jmp	$LN14@FormatIoSt

; 960  : 		goto CLEANUP;

	jmp	$CLEANUP$71217
$LN15@FormatIoSt:

; 961  : 
; 962  : 
; 963  : 	StringCbPrintfW(
; 964  : 		wszItemBuf,
; 965  : 		sizeof wszItemBuf,
; 966  : 		L"Flags =                                         %#x",
; 967  : 		IoStack.Flags);

	movzx	r9d, BYTE PTR IoStack$[rsp+2]
	lea	r8, OFFSET FLAT:$SG71222
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 968  : 
; 969  : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 970  : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 971  : 	if (!CopyToBuffer(&pFIoStack, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 972  : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIoStack$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN13@FormatIoSt
	jmp	$LN12@FormatIoSt

; 973  : 		goto CLEANUP;

	jmp	$CLEANUP$71217
$LN13@FormatIoSt:

; 974  : 
; 975  : 	StringCbPrintfW(
; 976  : 		wszItemBuf,
; 977  : 		sizeof wszItemBuf,
; 978  : 		L"Control =                                       %#x",
; 979  : 		IoStack.Control);

	movzx	r9d, BYTE PTR IoStack$[rsp+3]
	lea	r8, OFFSET FLAT:$SG71228
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 980  : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 981  : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 982  : 	if (!CopyToBuffer(&pFIoStack, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 983  : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIoStack$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN11@FormatIoSt
	jmp	$LN10@FormatIoSt

; 984  : 		goto CLEANUP;

	jmp	$CLEANUP$71217
$LN11@FormatIoSt:

; 985  : 
; 986  : 	if (!FormatIosParameters(&pFIoStack, &cbOffset, &IoStack, &BufSize, 
; 987  : 		hHeap))

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	lea	r9, QWORD PTR BufSize$[rsp]
	lea	r8, QWORD PTR IoStack$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIoStack$[rsp]
	call	?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FormatIosParameters
	test	eax, eax
	jne	SHORT $LN9@FormatIoSt
	jmp	$LN8@FormatIoSt

; 988  : 		goto CLEANUP;

	jmp	$CLEANUP$71217
$LN9@FormatIoSt:

; 989  : 
; 990  : 	StringCbPrintfW(
; 991  : 		wszItemBuf,
; 992  : 		sizeof wszItemBuf,
; 993  : 		L"DeviceObject =                                  %#p",
; 994  : 		IoStack.DeviceObject);

	mov	r9, QWORD PTR IoStack$[rsp+40]
	lea	r8, OFFSET FLAT:$SG71236
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 995  : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 996  : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 997  : 	if (!CopyToBuffer(&pFIoStack, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 998  : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIoStack$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN7@FormatIoSt
	jmp	$LN6@FormatIoSt

; 999  : 		goto CLEANUP;

	jmp	$CLEANUP$71217
$LN7@FormatIoSt:

; 1000 : 
; 1001 : 	StringCbPrintfW(
; 1002 : 		wszItemBuf,
; 1003 : 		sizeof wszItemBuf,
; 1004 : 		L"FileObject =                                    %#p",
; 1005 : 		IoStack.DeviceObject);

	mov	r9, QWORD PTR IoStack$[rsp+40]
	lea	r8, OFFSET FLAT:$SG71242
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1006 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1007 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1008 : 	if (!CopyToBuffer(&pFIoStack, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1009 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIoStack$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN5@FormatIoSt
	jmp	SHORT $LN4@FormatIoSt

; 1010 : 		goto CLEANUP;

	jmp	SHORT $CLEANUP$71217
$LN5@FormatIoSt:

; 1011 : 
; 1012 : 
; 1013 : 	// Add the extra null terminator which marks the text end
; 1014 : 	//
; 1015 : 	wszItemBuf[0] = L'\0';

	xor	eax, eax
	mov	WORD PTR wszItemBuf$[rsp], ax

; 1016 : 	cbItemLen = sizeof (WCHAR);

	mov	QWORD PTR cbItemLen$[rsp], 2

; 1017 : 	if (!CopyToBuffer(&pFIoStack, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1018 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIoStack$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN3@FormatIoSt
	jmp	SHORT $LN2@FormatIoSt

; 1019 : 		goto CLEANUP;

	jmp	SHORT $CLEANUP$71217
$LN3@FormatIoSt:

; 1020 : 
; 1021 : 	// If we made it here, success.
; 1022 : 	//
; 1023 : 	*ppFStack = (PWCHAR) pFIoStack;

	mov	rcx, QWORD PTR ppFStack$[rsp]
	mov	rax, QWORD PTR pFIoStack$[rsp]
	mov	QWORD PTR [rcx], rax

; 1024 : 	bRet = TRUE;

	mov	DWORD PTR bRet$[rsp], 1
$LN2@FormatIoSt:
$LN4@FormatIoSt:
$LN6@FormatIoSt:
$LN8@FormatIoSt:
$LN10@FormatIoSt:
$LN12@FormatIoSt:
$LN14@FormatIoSt:
$LN16@FormatIoSt:
$CLEANUP$71217:

; 1025 : 
; 1026 : CLEANUP:
; 1027 : 	if (!bRet) {

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FormatIoSt

; 1028 : 		HeapFree(hHeap, 0, pFIoStack);

	mov	r8, QWORD PTR pFIoStack$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR hHeap$[rsp]
	call	QWORD PTR __imp_HeapFree
$LN1@FormatIoSt:

; 1029 : 	}
; 1030 : 	return bRet;

	mov	eax, DWORD PTR bRet$[rsp]
$LN20@FormatIoSt:

; 1031 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 616				; 00000268H
	ret	0
?FormatIoStackGeneric@@YAHPEADPEAPEA_W@Z ENDP		; FormatIoStackGeneric
_TEXT	ENDS
;	COMDAT pdata
; File c:\apps\pw7hp\devpgm\mssdk\include\strsafe.h
pdata	SEGMENT
$pdata$?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ DD imagerel $LN4
	DD	imagerel $LN4+141
	DD	imagerel $unwind$?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ DD 011801H
	DD	0a218H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ
_TEXT	SEGMENT
hr$ = 48
cchDest$ = 56
argList$68300 = 64
pszDest$ = 96
cbDest$ = 104
pszFormat$ = 112
?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ PROC		; StringCbPrintfW, COMDAT

; 4797 : {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 88					; 00000058H

; 4798 :     HRESULT hr;
; 4799 :     size_t cchDest = cbDest / sizeof(wchar_t);

	xor	edx, edx
	mov	rax, QWORD PTR cbDest$[rsp]
	mov	ecx, 2
	div	rcx
	mov	QWORD PTR cchDest$[rsp], rax

; 4800 : 
; 4801 :     hr = StringValidateDestW(pszDest, cchDest, STRSAFE_MAX_CCH);

	mov	r8d, 2147483647				; 7fffffffH
	mov	rdx, QWORD PTR cchDest$[rsp]
	mov	rcx, QWORD PTR pszDest$[rsp]
	call	?StringValidateDestW@@YAJPEB_W_K_K@Z	; StringValidateDestW
	mov	DWORD PTR hr$[rsp], eax

; 4802 :     
; 4803 :     if (SUCCEEDED(hr))

	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN1@StringCbPr

; 4804 :     {
; 4805 :         va_list argList;
; 4806 : 
; 4807 :         va_start(argList, pszFormat);

	lea	rax, QWORD PTR pszFormat$[rsp+8]
	mov	QWORD PTR argList$68300[rsp], rax

; 4808 : 
; 4809 :         hr = StringVPrintfWorkerW(pszDest,
; 4810 :                                   cchDest,
; 4811 :                                   NULL,
; 4812 :                                   pszFormat,
; 4813 :                                   argList);

	mov	rax, QWORD PTR argList$68300[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pszFormat$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR cchDest$[rsp]
	mov	rcx, QWORD PTR pszDest$[rsp]
	call	?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z ; StringVPrintfWorkerW
	mov	DWORD PTR hr$[rsp], eax

; 4814 : 
; 4815 :         va_end(argList);

	mov	QWORD PTR argList$68300[rsp], 0
$LN1@StringCbPr:

; 4816 :     }
; 4817 : 
; 4818 :     return hr;

	mov	eax, DWORD PTR hr$[rsp]

; 4819 : }

	add	rsp, 88					; 00000058H
	ret	0
?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ ENDP		; StringCbPrintfW
_TEXT	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?StringCbLengthW@@YAJPEB_W_KPEA_K@Z DD imagerel $LN9
	DD	imagerel $LN9+155
	DD	imagerel $unwind$?StringCbLengthW@@YAJPEB_W_KPEA_K@Z
pdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?StringCbLengthW@@YAJPEB_W_KPEA_K@Z DD 011301H
	DD	08213H
; Function compile flags: /Odtp
xdata	ENDS
;	COMDAT ?StringCbLengthW@@YAJPEB_W_KPEA_K@Z
_TEXT	SEGMENT
cchLength$ = 32
cchMax$ = 40
hr$ = 48
psz$ = 80
cbMax$ = 88
pcbLength$ = 96
?StringCbLengthW@@YAJPEB_W_KPEA_K@Z PROC		; StringCbLengthW, COMDAT

; 8329 : {

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 8330 :     HRESULT hr;
; 8331 :     size_t cchMax = cbMax / sizeof(wchar_t);

	xor	edx, edx
	mov	rax, QWORD PTR cbMax$[rsp]
	mov	ecx, 2
	div	rcx
	mov	QWORD PTR cchMax$[rsp], rax

; 8332 :     size_t cchLength = 0;

	mov	QWORD PTR cchLength$[rsp], 0

; 8333 : 
; 8334 :     if ((psz == NULL) || (cchMax > STRSAFE_MAX_CCH))

	cmp	QWORD PTR psz$[rsp], 0
	je	SHORT $LN5@StringCbLe
	cmp	QWORD PTR cchMax$[rsp], 2147483647	; 7fffffffH
	jbe	SHORT $LN6@StringCbLe
$LN5@StringCbLe:

; 8335 :     {
; 8336 :         hr = STRSAFE_E_INVALID_PARAMETER;

	mov	DWORD PTR hr$[rsp], -2147024809		; ffffffff80070057H

; 8337 :     }
; 8338 :     else

	jmp	SHORT $LN4@StringCbLe
$LN6@StringCbLe:

; 8339 :     {
; 8340 :         hr = StringLengthWorkerW(psz, cchMax, &cchLength);

	lea	r8, QWORD PTR cchLength$[rsp]
	mov	rdx, QWORD PTR cchMax$[rsp]
	mov	rcx, QWORD PTR psz$[rsp]
	call	?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z	; StringLengthWorkerW
	mov	DWORD PTR hr$[rsp], eax
$LN4@StringCbLe:

; 8341 :     }
; 8342 : 
; 8343 :     if (pcbLength)

	cmp	QWORD PTR pcbLength$[rsp], 0
	je	SHORT $LN3@StringCbLe

; 8344 :     {
; 8345 :         if (SUCCEEDED(hr))

	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN2@StringCbLe

; 8346 :         {
; 8347 :             // safe to multiply cchLength * sizeof(wchar_t) since cchLength < STRSAFE_MAX_CCH and sizeof(wchar_t) is 2
; 8348 :             *pcbLength = cchLength * sizeof(wchar_t);

	mov	rcx, QWORD PTR cchLength$[rsp]
	shl	rcx, 1
	mov	rax, QWORD PTR pcbLength$[rsp]
	mov	QWORD PTR [rax], rcx

; 8349 :         }
; 8350 :         else

	jmp	SHORT $LN1@StringCbLe
$LN2@StringCbLe:

; 8351 :         {
; 8352 :             *pcbLength = 0;

	mov	rax, QWORD PTR pcbLength$[rsp]
	mov	QWORD PTR [rax], 0
$LN1@StringCbLe:
$LN3@StringCbLe:

; 8353 :         }
; 8354 :     }
; 8355 : 
; 8356 :     return hr;

	mov	eax, DWORD PTR hr$[rsp]

; 8357 : }

	add	rsp, 72					; 00000048H
	ret	0
?StringCbLengthW@@YAJPEB_W_KPEA_K@Z ENDP		; StringCbLengthW
_TEXT	ENDS
pdata	SEGMENT
$pdata$?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z DD imagerel ?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z
	DD	imagerel ?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z+160
	DD	imagerel $unwind$?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z DD 011301H
	DD	02213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
cchOriginalMax$ = 0
hr$ = 8
psz$ = 32
cchMax$ = 40
pcchLength$ = 48
?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z PROC		; StringLengthWorkerW

; 8585 : {

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 8586 :     HRESULT hr = S_OK;

	mov	DWORD PTR hr$[rsp], 0

; 8587 :     size_t cchOriginalMax = cchMax;

	mov	rax, QWORD PTR cchMax$[rsp]
	mov	QWORD PTR cchOriginalMax$[rsp], rax
$LN6@StringLeng:

; 8588 : 
; 8589 :     while (cchMax && (*psz != L'\0'))

	cmp	QWORD PTR cchMax$[rsp], 0
	je	SHORT $LN5@StringLeng
	mov	rax, QWORD PTR psz$[rsp]
	movzx	eax, WORD PTR [rax]
	test	eax, eax
	je	SHORT $LN5@StringLeng

; 8590 :     {
; 8591 :         psz++;

	mov	rax, QWORD PTR psz$[rsp]
	add	rax, 2
	mov	QWORD PTR psz$[rsp], rax

; 8592 :         cchMax--;

	mov	rax, QWORD PTR cchMax$[rsp]
	sub	rax, 1
	mov	QWORD PTR cchMax$[rsp], rax

; 8593 :     }

	jmp	SHORT $LN6@StringLeng
$LN5@StringLeng:

; 8594 : 
; 8595 :     if (cchMax == 0)

	cmp	QWORD PTR cchMax$[rsp], 0
	jne	SHORT $LN4@StringLeng

; 8596 :     {
; 8597 :         // the string is longer than cchMax
; 8598 :         hr = STRSAFE_E_INVALID_PARAMETER;

	mov	DWORD PTR hr$[rsp], -2147024809		; ffffffff80070057H
$LN4@StringLeng:

; 8599 :     }
; 8600 : 
; 8601 :     if (pcchLength)

	cmp	QWORD PTR pcchLength$[rsp], 0
	je	SHORT $LN3@StringLeng

; 8602 :     {
; 8603 :         if (SUCCEEDED(hr))

	cmp	DWORD PTR hr$[rsp], 0
	jl	SHORT $LN2@StringLeng

; 8604 :         {
; 8605 :             *pcchLength = cchOriginalMax - cchMax;

	mov	rax, QWORD PTR cchMax$[rsp]
	mov	rcx, QWORD PTR cchOriginalMax$[rsp]
	sub	rcx, rax
	mov	rax, QWORD PTR pcchLength$[rsp]
	mov	QWORD PTR [rax], rcx

; 8606 :         }
; 8607 :         else

	jmp	SHORT $LN1@StringLeng
$LN2@StringLeng:

; 8608 :         {
; 8609 :             *pcchLength = 0;

	mov	rax, QWORD PTR pcchLength$[rsp]
	mov	QWORD PTR [rax], 0
$LN1@StringLeng:
$LN3@StringLeng:

; 8610 :         }
; 8611 :     }
; 8612 : 
; 8613 :     return hr;

	mov	eax, DWORD PTR hr$[rsp]

; 8614 : }

	add	rsp, 24
	ret	0
?StringLengthWorkerW@@YAJPEB_W_KPEA_K@Z ENDP		; StringLengthWorkerW
_TEXT	ENDS
pdata	SEGMENT
$pdata$?StringValidateDestW@@YAJPEB_W_K_K@Z DD imagerel ?StringValidateDestW@@YAJPEB_W_K_K@Z
	DD	imagerel ?StringValidateDestW@@YAJPEB_W_K_K@Z+61
	DD	imagerel $unwind$?StringValidateDestW@@YAJPEB_W_K_K@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?StringValidateDestW@@YAJPEB_W_K_K@Z DD 011301H
	DD	02213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
hr$ = 0
pszDest$ = 32
cchDest$ = 40
cchMax$ = 48
?StringValidateDestW@@YAJPEB_W_K_K@Z PROC		; StringValidateDestW

; 8769 : {

	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 24

; 8770 :     HRESULT hr = S_OK;

	mov	DWORD PTR hr$[rsp], 0

; 8771 : 
; 8772 :     if ((cchDest == 0) || (cchDest > cchMax))

	cmp	QWORD PTR cchDest$[rsp], 0
	je	SHORT $LN1@StringVali
	mov	rax, QWORD PTR cchMax$[rsp]
	cmp	QWORD PTR cchDest$[rsp], rax
	jbe	SHORT $LN2@StringVali
$LN1@StringVali:

; 8773 :     {
; 8774 :         hr = STRSAFE_E_INVALID_PARAMETER;

	mov	DWORD PTR hr$[rsp], -2147024809		; ffffffff80070057H
$LN2@StringVali:

; 8775 :     }
; 8776 : 
; 8777 :     return hr;

	mov	eax, DWORD PTR hr$[rsp]

; 8778 : }

	add	rsp, 24
	ret	0
?StringValidateDestW@@YAJPEB_W_K_K@Z ENDP		; StringValidateDestW
_TEXT	ENDS
EXTRN	_vsnwprintf:PROC
pdata	SEGMENT
$pdata$?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z DD imagerel ?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z
	DD	imagerel ?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z+245
	DD	imagerel $unwind$?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z DD 011801H
	DD	08218H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
cchNewDestLength$ = 32
cchMax$ = 40
iRet$ = 48
hr$ = 52
pszDest$ = 80
cchDest$ = 88
pcchNewDestLength$ = 96
pszFormat$ = 104
argList$ = 112
?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z PROC	; StringVPrintfWorkerW

; 9145 : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 9146 :     HRESULT hr = S_OK;

	mov	DWORD PTR hr$[rsp], 0

; 9147 :     int iRet;
; 9148 :     size_t cchMax;
; 9149 :     size_t cchNewDestLength = 0;

	mov	QWORD PTR cchNewDestLength$[rsp], 0

; 9150 : 
; 9151 :     // leave the last space for the null terminator
; 9152 :     cchMax = cchDest - 1;

	mov	rax, QWORD PTR cchDest$[rsp]
	sub	rax, 1
	mov	QWORD PTR cchMax$[rsp], rax

; 9153 : 
; 9154 : #if (STRSAFE_USE_SECURE_CRT == 1) && !defined(STRSAFE_LIB_IMPL)
; 9155 :     iRet = _vsnwprintf_s(pszDest, cchDest, cchMax, pszFormat, argList);
; 9156 : #else
; 9157 :     #pragma warning(push)
; 9158 :     #pragma warning(disable: __WARNING_BANNED_API_USAGE)// "STRSAFE not included"
; 9159 :     iRet = _vsnwprintf(pszDest, cchMax, pszFormat, argList);

	mov	r9, QWORD PTR argList$[rsp]
	mov	r8, QWORD PTR pszFormat$[rsp]
	mov	rdx, QWORD PTR cchMax$[rsp]
	mov	rcx, QWORD PTR pszDest$[rsp]
	call	_vsnwprintf
	mov	DWORD PTR iRet$[rsp], eax

; 9160 :     #pragma warning(pop)
; 9161 : #endif
; 9162 :     // ASSERT((iRet < 0) || (((size_t)iRet) <= cchMax));
; 9163 : 
; 9164 :     if ((iRet < 0) || (((size_t)iRet) > cchMax))

	cmp	DWORD PTR iRet$[rsp], 0
	jl	SHORT $LN5@StringVPri
	movsxd	rax, DWORD PTR iRet$[rsp]
	cmp	rax, QWORD PTR cchMax$[rsp]
	jbe	SHORT $LN6@StringVPri
$LN5@StringVPri:

; 9165 :     {
; 9166 :         // need to null terminate the string
; 9167 :         pszDest += cchMax;

	mov	rcx, QWORD PTR pszDest$[rsp]
	mov	rax, QWORD PTR cchMax$[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR pszDest$[rsp], rax

; 9168 :         *pszDest = L'\0';

	xor	ecx, ecx
	mov	rax, QWORD PTR pszDest$[rsp]
	mov	WORD PTR [rax], cx

; 9169 : 
; 9170 :         cchNewDestLength = cchMax;

	mov	rax, QWORD PTR cchMax$[rsp]
	mov	QWORD PTR cchNewDestLength$[rsp], rax

; 9171 : 
; 9172 :         // we have truncated pszDest
; 9173 :         hr = STRSAFE_E_INSUFFICIENT_BUFFER;

	mov	DWORD PTR hr$[rsp], -2147024774		; ffffffff8007007aH
	jmp	SHORT $LN4@StringVPri
$LN6@StringVPri:

; 9174 :     }
; 9175 :     else if (((size_t)iRet) == cchMax)

	movsxd	rax, DWORD PTR iRet$[rsp]
	cmp	rax, QWORD PTR cchMax$[rsp]
	jne	SHORT $LN3@StringVPri

; 9176 :     {
; 9177 :         // need to null terminate the string
; 9178 :         pszDest += cchMax;

	mov	rcx, QWORD PTR pszDest$[rsp]
	mov	rax, QWORD PTR cchMax$[rsp]
	lea	rax, QWORD PTR [rcx+rax*2]
	mov	QWORD PTR pszDest$[rsp], rax

; 9179 :         *pszDest = L'\0';

	xor	ecx, ecx
	mov	rax, QWORD PTR pszDest$[rsp]
	mov	WORD PTR [rax], cx

; 9180 : 
; 9181 :         cchNewDestLength = cchMax;

	mov	rax, QWORD PTR cchMax$[rsp]
	mov	QWORD PTR cchNewDestLength$[rsp], rax

; 9182 :     }
; 9183 :     else

	jmp	SHORT $LN2@StringVPri
$LN3@StringVPri:

; 9184 :     {
; 9185 :         cchNewDestLength = (size_t)iRet;

	movsxd	rax, DWORD PTR iRet$[rsp]
	mov	QWORD PTR cchNewDestLength$[rsp], rax
$LN2@StringVPri:
$LN4@StringVPri:

; 9186 :     }
; 9187 : 
; 9188 :     if (pcchNewDestLength)

	cmp	QWORD PTR pcchNewDestLength$[rsp], 0
	je	SHORT $LN1@StringVPri

; 9189 :     {
; 9190 :         *pcchNewDestLength = cchNewDestLength;

	mov	rcx, QWORD PTR pcchNewDestLength$[rsp]
	mov	rax, QWORD PTR cchNewDestLength$[rsp]
	mov	QWORD PTR [rcx], rax
$LN1@StringVPri:

; 9191 :     }
; 9192 : 
; 9193 :     return hr;

	mov	eax, DWORD PTR hr$[rsp]

; 9194 : }

	add	rsp, 72					; 00000048H
	ret	0
?StringVPrintfWorkerW@@YAJPEA_W_KPEA_KPEB_WPEAD@Z ENDP	; StringVPrintfWorkerW
_TEXT	ENDS
EXTRN	__ImageBase:BYTE
pdata	SEGMENT
$pdata$?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+636
	DD	imagerel $unwind$?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 011801H
	DD	08218H
; Function compile flags: /Odtp
; File b:\programm\wntsys\testfilter\release\1_1\source\krnlutils\platfdepcompile.cpp
xdata	ENDS
_TEXT	SEGMENT
tv65 = 48
tv80 = 52
tv92 = 56
ppFmtBuf$ = 80
pcbOffset$ = 88
pIoStack$ = 96
pcbBufSize$ = 104
hHeap$ = 112
?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FormatIosParameters

; 826  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 72					; 00000048H

; 827  : 
; 828  : 	switch (pIoStack->MajorFunction) {

	mov	rax, QWORD PTR pIoStack$[rsp]
	movzx	eax, BYTE PTR [rax]
	mov	DWORD PTR tv65[rsp], eax
	cmp	DWORD PTR tv65[rsp], 27
	ja	$LN17@FormatIosP
	movsxd	rax, DWORD PTR tv65[rsp]
	lea	rcx, OFFSET FLAT:__ImageBase
	movzx	eax, BYTE PTR $LN21@FormatIosP[rcx+rax]
	mov	eax, DWORD PTR $LN22@FormatIosP[rcx+rax*4]
	add	rax, rcx
	jmp	rax
$LN16@FormatIosP:

; 829  : 		case IRP_MJ_CREATE:
; 830  : 			return FmtIopCreate(ppFmtBuf, pcbOffset, pIoStack, 
; 831  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopCreate
	jmp	$LN19@FormatIosP

; 832  : 			break;

	jmp	$LN17@FormatIosP
$LN15@FormatIosP:

; 833  : 
; 834  : 		case IRP_MJ_DEVICE_CONTROL:
; 835  : 		case IRP_MJ_INTERNAL_DEVICE_CONTROL:
; 836  : 
; 837  : 			return FmtIopDeviceControl(ppFmtBuf, pcbOffset, pIoStack, 
; 838  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopDeviceControl
	jmp	$LN19@FormatIosP

; 839  : 			break;

	jmp	$LN17@FormatIosP
$LN14@FormatIosP:

; 840  : 
; 841  : 		case IRP_MJ_PNP:
; 842  : 			switch (pIoStack->MinorFunction) {

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	al, BYTE PTR [rax+1]
	mov	BYTE PTR tv80[rsp], al
	cmp	BYTE PTR tv80[rsp], 7
	je	SHORT $LN11@FormatIosP
	jmp	SHORT $LN12@FormatIosP
$LN11@FormatIosP:

; 843  : 				case IRP_MN_QUERY_DEVICE_RELATIONS:
; 844  : 
; 845  : 					return FmtIopQueryDeviceRelations(ppFmtBuf, pcbOffset, pIoStack, 
; 846  : 						pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopQueryDeviceRelations
	jmp	$LN19@FormatIosP
$LN12@FormatIosP:

; 847  : 					break;
; 848  : 			}
; 849  : 
; 850  : 			break;

	jmp	$LN17@FormatIosP
$LN10@FormatIosP:

; 851  : 
; 852  : 		case IRP_MJ_POWER:
; 853  : 			switch (pIoStack->MinorFunction) {

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	al, BYTE PTR [rax+1]
	mov	BYTE PTR tv92[rsp], al
	cmp	BYTE PTR tv92[rsp], 0
	je	SHORT $LN6@FormatIosP
	cmp	BYTE PTR tv92[rsp], 1
	jbe	SHORT $LN8@FormatIosP
	cmp	BYTE PTR tv92[rsp], 3
	jbe	SHORT $LN7@FormatIosP
	jmp	SHORT $LN8@FormatIosP
$LN7@FormatIosP:

; 854  : 
; 855  : 				case IRP_MN_QUERY_POWER:
; 856  : 				case IRP_MN_SET_POWER:
; 857  : 
; 858  : 					return FmtIopQueryPower(ppFmtBuf, pcbOffset, pIoStack, 
; 859  : 						pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopQueryPower
	jmp	$LN19@FormatIosP

; 860  : 
; 861  : 					break;

	jmp	SHORT $LN8@FormatIosP
$LN6@FormatIosP:

; 862  : 
; 863  : 				case IRP_MN_WAIT_WAKE:
; 864  : 
; 865  : 					return FmtIopWaitWake(ppFmtBuf, pcbOffset, pIoStack, 
; 866  : 						pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopWaitWake
	jmp	$LN19@FormatIosP
$LN8@FormatIosP:

; 867  : 
; 868  : 					break;
; 869  : 			}
; 870  : 			break;

	jmp	$LN17@FormatIosP
$LN5@FormatIosP:

; 871  : 
; 872  : 		case IRP_MJ_QUERY_INFORMATION:
; 873  : 
; 874  : 			return FmtIopQueryInformation(ppFmtBuf, pcbOffset, pIoStack, 
; 875  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopQueryInformation
	jmp	$LN19@FormatIosP

; 876  : 			break;

	jmp	$LN17@FormatIosP
$LN4@FormatIosP:

; 877  : 
; 878  : 		case IRP_MJ_QUERY_VOLUME_INFORMATION:
; 879  : 
; 880  : 			return FmtIopQueryVolumeInformation(ppFmtBuf, pcbOffset, pIoStack, 
; 881  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopQueryVolumeInformation
	jmp	SHORT $LN19@FormatIosP

; 882  : 			break;

	jmp	SHORT $LN17@FormatIosP
$LN3@FormatIosP:

; 883  : 
; 884  : 		case IRP_MJ_READ:
; 885  : 
; 886  : 			return FmtIopRead(ppFmtBuf, pcbOffset, pIoStack, 
; 887  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopRead
	jmp	SHORT $LN19@FormatIosP

; 888  : 			break;

	jmp	SHORT $LN17@FormatIosP
$LN2@FormatIosP:

; 889  : 
; 890  : 		case IRP_MJ_SET_INFORMATION:
; 891  : 
; 892  : 			return FmtIopSetInformation(ppFmtBuf, pcbOffset, pIoStack, 
; 893  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopSetInformation
	jmp	SHORT $LN19@FormatIosP

; 894  : 			break;

	jmp	SHORT $LN17@FormatIosP
$LN1@FormatIosP:

; 895  : 
; 896  : 		case IRP_MJ_WRITE:
; 897  : 
; 898  : 			return FmtIopWrite(ppFmtBuf, pcbOffset, pIoStack, 
; 899  : 				pcbBufSize, hHeap);

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pIoStack$[rsp]
	mov	rdx, QWORD PTR pcbOffset$[rsp]
	mov	rcx, QWORD PTR ppFmtBuf$[rsp]
	call	?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ; FmtIopWrite
	jmp	SHORT $LN19@FormatIosP
$LN17@FormatIosP:

; 900  : 			break;
; 901  : 
; 902  : 	}
; 903  : 	return TRUE;

	mov	eax, 1
$LN19@FormatIosP:

; 904  : }

	add	rsp, 72					; 00000048H
	ret	0
	npad	2
$LN22@FormatIosP:
	DD	$LN16@FormatIosP
	DD	$LN3@FormatIosP
	DD	$LN1@FormatIosP
	DD	$LN5@FormatIosP
	DD	$LN2@FormatIosP
	DD	$LN4@FormatIosP
	DD	$LN15@FormatIosP
	DD	$LN10@FormatIosP
	DD	$LN14@FormatIosP
	DD	$LN17@FormatIosP
$LN21@FormatIosP:
	DB	0
	DB	9
	DB	9
	DB	1
	DB	2
	DB	3
	DB	4
	DB	9
	DB	9
	DB	9
	DB	5
	DB	9
	DB	9
	DB	9
	DB	6
	DB	6
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	9
	DB	7
	DB	9
	DB	9
	DB	9
	DB	9
	DB	8
?FormatIosParameters@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FormatIosParameters
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+595
	DD	imagerel $unwind$?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	025011bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
__$ArrayPad$ = 280
ppFmtBuf$ = 304
pcbOffset$ = 312
pIoStack$ = 320
pcbBufSize$ = 328
hHeap$ = 336
?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopCreate

; 305  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 296				; 00000128H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 306  : 	BOOL	bRet;
; 307  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 308  : 
; 309  : 	FORMAT_ITEM(
; 310  : 		wszItemBuf, 
; 311  : 		L"Parameters.Create.SecurityContext =             %#p",
; 312  : 		pIoStack->Parameters.Create.SecurityContext,
; 313  : 		ppFmtBuf,
; 314  : 		pcbOffset,
; 315  : 		pcbBufSize,
; 316  : 		hHeap,
; 317  : 		bRet)

	mov	r9, QWORD PTR pIoStack$[rsp]
	mov	r9, QWORD PTR [r9+8]
	lea	r8, OFFSET FLAT:$SG71019
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 318  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN5@FmtIopCrea
	xor	eax, eax
	jmp	$LN6@FmtIopCrea
$LN5@FmtIopCrea:

; 319  : 
; 320  : 	FORMAT_ITEM(
; 321  : 		wszItemBuf, 
; 322  : 		L"Parameters.Create.Options =                     %#x",
; 323  : 		pIoStack->Parameters.Create.Options,
; 324  : 		ppFmtBuf,
; 325  : 		pcbOffset,
; 326  : 		pcbBufSize,
; 327  : 		hHeap,
; 328  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+16]
	lea	r8, OFFSET FLAT:$SG71021
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 329  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN4@FmtIopCrea
	xor	eax, eax
	jmp	$LN6@FmtIopCrea
$LN4@FmtIopCrea:

; 330  : 
; 331  : 	FORMAT_ITEM(
; 332  : 		wszItemBuf, 
; 333  : 		L"Parameters.Create.FileAttributes =              %#x",
; 334  : 		pIoStack->Parameters.Create.FileAttributes,
; 335  : 		ppFmtBuf,
; 336  : 		pcbOffset,
; 337  : 		pcbBufSize,
; 338  : 		hHeap,
; 339  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	movzx	r9d, WORD PTR [rax+24]
	lea	r8, OFFSET FLAT:$SG71023
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 340  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN3@FmtIopCrea
	xor	eax, eax
	jmp	$LN6@FmtIopCrea
$LN3@FmtIopCrea:

; 341  : 
; 342  : 	FORMAT_ITEM(
; 343  : 		wszItemBuf, 
; 344  : 		L"Parameters.Create.ShareAccess =                 %#x",
; 345  : 		pIoStack->Parameters.Create.ShareAccess,
; 346  : 		ppFmtBuf,
; 347  : 		pcbOffset,
; 348  : 		pcbBufSize,
; 349  : 		hHeap,
; 350  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	movzx	r9d, WORD PTR [rax+26]
	lea	r8, OFFSET FLAT:$SG71025
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 351  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopCrea
	xor	eax, eax
	jmp	SHORT $LN6@FmtIopCrea
$LN2@FmtIopCrea:

; 352  : 
; 353  : 	FORMAT_ITEM(
; 354  : 		wszItemBuf, 
; 355  : 		L"Parameters.Create.EaLength	 =                %#x",
; 356  : 		pIoStack->Parameters.Create.EaLength,
; 357  : 		ppFmtBuf,
; 358  : 		pcbOffset,
; 359  : 		pcbBufSize,
; 360  : 		hHeap,
; 361  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+32]
	lea	r8, OFFSET FLAT:$SG71027
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 362  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopCrea
	xor	eax, eax
	jmp	SHORT $LN6@FmtIopCrea
$LN1@FmtIopCrea:

; 363  : 
; 364  : 	return TRUE;

	mov	eax, 1
$LN6@FmtIopCrea:

; 365  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 296				; 00000128H
	ret	0
?FmtIopCreate@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopCreate
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+488
	DD	imagerel $unwind$?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	025011bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
__$ArrayPad$ = 280
ppFmtBuf$ = 304
pcbOffset$ = 312
pIoStack$ = 320
pcbBufSize$ = 328
hHeap$ = 336
?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopDeviceControl

; 375  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 296				; 00000128H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 376  : 	BOOL	bRet;
; 377  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 378  : 
; 379  : 	FORMAT_ITEM(
; 380  : 		wszItemBuf, 
; 381  : 		L"Parameters.DeviceIoControl.OutputBufferLength = %#x",
; 382  : 		pIoStack->Parameters.DeviceIoControl.OutputBufferLength,
; 383  : 		ppFmtBuf,
; 384  : 		pcbOffset,
; 385  : 		pcbBufSize,
; 386  : 		hHeap,
; 387  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG71038
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 388  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN4@FmtIopDevi
	xor	eax, eax
	jmp	$LN5@FmtIopDevi
$LN4@FmtIopDevi:

; 389  : 
; 390  : 	FORMAT_ITEM(
; 391  : 		wszItemBuf, 
; 392  : 		L"Parameters.DeviceIoControl.InputBufferLength =  %#x",
; 393  : 		pIoStack->Parameters.DeviceIoControl.InputBufferLength,
; 394  : 		ppFmtBuf,
; 395  : 		pcbOffset,
; 396  : 		pcbBufSize,
; 397  : 		hHeap,
; 398  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+16]
	lea	r8, OFFSET FLAT:$SG71040
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 399  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN3@FmtIopDevi
	xor	eax, eax
	jmp	$LN5@FmtIopDevi
$LN3@FmtIopDevi:

; 400  : 
; 401  : 	FORMAT_ITEM(
; 402  : 		wszItemBuf, 
; 403  : 		L"Parameters.DeviceIoControl.IoControlCode =      %#x",
; 404  : 		pIoStack->Parameters.DeviceIoControl.IoControlCode,
; 405  : 		ppFmtBuf,
; 406  : 		pcbOffset,
; 407  : 		pcbBufSize,
; 408  : 		hHeap,
; 409  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+24]
	lea	r8, OFFSET FLAT:$SG71042
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 410  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopDevi
	xor	eax, eax
	jmp	SHORT $LN5@FmtIopDevi
$LN2@FmtIopDevi:

; 411  : 
; 412  : 	FORMAT_ITEM(
; 413  : 		wszItemBuf, 
; 414  : 		L"Parameters.DeviceIoControl.Type3InputBuffer =   %#p",
; 415  : 		pIoStack->Parameters.DeviceIoControl.Type3InputBuffer,
; 416  : 		ppFmtBuf,
; 417  : 		pcbOffset,
; 418  : 		pcbBufSize,
; 419  : 		hHeap,
; 420  : 		bRet)

	mov	r9, QWORD PTR pIoStack$[rsp]
	mov	r9, QWORD PTR [r9+32]
	lea	r8, OFFSET FLAT:$SG71044
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 421  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopDevi
	xor	eax, eax
	jmp	SHORT $LN5@FmtIopDevi
$LN1@FmtIopDevi:

; 422  : 
; 423  : 	return TRUE;

	mov	eax, 1
$LN5@FmtIopDevi:

; 424  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 296				; 00000128H
	ret	0
?FmtIopDeviceControl@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopDeviceControl
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+202
	DD	imagerel $unwind$?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	03f011bH
	DD	imagerel __GSHandlerCheck
	DD	01e8H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszRelType$ = 64
wszItemBuf$ = 272
bRet$ = 480
__$ArrayPad$ = 488
ppFmtBuf$ = 512
pcbOffset$ = 520
pIoStack$ = 528
pcbBufSize$ = 536
hHeap$ = 544
?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopQueryDeviceRelations

; 434  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 504				; 000001f8H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 435  : 	BOOL	bRet;
; 436  : 	WCHAR	wszRelType[FMTIRP_ITEM_BUF_SIZE];
; 437  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 438  : 
; 439  : 	DecodeRelType(wszRelType, sizeof wszRelType, 
; 440  : 		pIoStack->Parameters.QueryDeviceRelations.Type);

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+8]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszRelType$[rsp]
	call	?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z ; DecodeRelType

; 441  : 
; 442  : 	FORMAT_ITEM(
; 443  : 		wszItemBuf, 
; 444  : 		L"Parameters.QueryDeviceRelations.Type =          %s",
; 445  : 		wszRelType,
; 446  : 		ppFmtBuf,
; 447  : 		pcbOffset,
; 448  : 		pcbBufSize,
; 449  : 		hHeap,
; 450  : 		bRet)

	lea	r9, QWORD PTR wszRelType$[rsp]
	lea	r8, OFFSET FLAT:$SG71056
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 451  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopQuer
	xor	eax, eax
	jmp	SHORT $LN2@FmtIopQuer
$LN1@FmtIopQuer:

; 452  : 
; 453  : 	return TRUE;

	mov	eax, 1
$LN2@FmtIopQuer:

; 454  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 504				; 000001f8H
	ret	0
?FmtIopQueryDeviceRelations@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopQueryDeviceRelations
_TEXT	ENDS
EXTRN	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z:PROC	; DecodeEnum
pdata	SEGMENT
$pdata$?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z DD imagerel ?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z
	DD	imagerel ?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z+68
	DD	imagerel $unwind$?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszOutBuf$ = 64
cbBufSize$ = 72
DRType$ = 80
?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z PROC ; DecodeRelType

; 271  : {

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 272  : 	return DecodeEnum(
; 273  : 		DRType,
; 274  : 		0,
; 275  : 		pwszDeviceRelationTypeV,
; 276  : 		sizeof pwszDeviceRelationTypeV / sizeof (PWSTR),
; 277  : 		wszOutBuf,
; 278  : 		cbBufSize);

	mov	rax, QWORD PTR cbBufSize$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR wszOutBuf$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 6
	lea	r8, OFFSET FLAT:pwszDeviceRelationTypeV
	xor	edx, edx
	mov	ecx, DWORD PTR DRType$[rsp]
	call	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z ; DecodeEnum

; 279  : }

	add	rsp, 56					; 00000038H
	ret	0
?DecodeRelType@@YAPEA_WPEA_W_KW4_DEVICE_RELATION_TYPE@@@Z ENDP ; DecodeRelType
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+278
	DD	imagerel $unwind$?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	025011bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
__$ArrayPad$ = 280
ppFmtBuf$ = 304
pcbOffset$ = 312
pIoStack$ = 320
pcbBufSize$ = 328
hHeap$ = 336
?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopQueryInformation

; 464  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 296				; 00000128H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 465  : 	BOOL	bRet;
; 466  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 467  : 
; 468  : 	FORMAT_ITEM(
; 469  : 		wszItemBuf, 
; 470  : 		L"Parameters.QueryFile.Length =                   %#x",
; 471  : 		pIoStack->Parameters.QueryFile.Length,
; 472  : 		ppFmtBuf,
; 473  : 		pcbOffset,
; 474  : 		pcbBufSize,
; 475  : 		hHeap,
; 476  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG71067
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 477  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopQuer@2
	xor	eax, eax
	jmp	SHORT $LN3@FmtIopQuer@2
$LN2@FmtIopQuer@2:

; 478  : 
; 479  : 	FORMAT_ITEM(
; 480  : 		wszItemBuf, 
; 481  : 		L"Parameters.QueryFile.FileInformationClass =     %d",
; 482  : 		pIoStack->Parameters.QueryFile.FileInformationClass,
; 483  : 		ppFmtBuf,
; 484  : 		pcbOffset,
; 485  : 		pcbBufSize,
; 486  : 		hHeap,
; 487  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+16]
	lea	r8, OFFSET FLAT:$SG71069
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 488  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopQuer@2
	xor	eax, eax
	jmp	SHORT $LN3@FmtIopQuer@2
$LN1@FmtIopQuer@2:

; 489  : 
; 490  : 	return TRUE;

	mov	eax, 1
$LN3@FmtIopQuer@2:

; 491  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 296				; 00000128H
	ret	0
?FmtIopQueryInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopQueryInformation
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+700
	DD	imagerel $unwind$?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	041011bH
	DD	imagerel __GSHandlerCheck
	DD	01f0H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
wszDecoded$ = 288
__$ArrayPad$ = 496
ppFmtBuf$ = 528
pcbOffset$ = 536
pIoStack$ = 544
pcbBufSize$ = 552
hHeap$ = 560
?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopQueryPower

; 501  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 520				; 00000208H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 502  : 	BOOL	bRet;
; 503  : 	WCHAR	wszDecoded[FMTIRP_ITEM_BUF_SIZE];
; 504  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 505  : 
; 506  : 	FORMAT_ITEM(
; 507  : 		wszItemBuf, 
; 508  : 		L"Parameters.Power.SystemContext =                %#x",
; 509  : 		pIoStack->Parameters.Power.SystemContext,
; 510  : 		ppFmtBuf,
; 511  : 		pcbOffset,
; 512  : 		pcbBufSize,
; 513  : 		hHeap,
; 514  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG71081
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 515  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN5@FmtIopQuer@3
	xor	eax, eax
	jmp	$LN6@FmtIopQuer@3
$LN5@FmtIopQuer@3:

; 516  : 
; 517  : 	DecodePowerStateType(wszDecoded, sizeof wszDecoded, 
; 518  : 		pIoStack->Parameters.Power.Type);

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+16]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszDecoded$[rsp]
	call	?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z ; DecodePowerStateType

; 519  : 	FORMAT_ITEM(
; 520  : 		wszItemBuf, 
; 521  : 		L"Parameters.Power.Type =                         %s",
; 522  : 		wszDecoded,
; 523  : 		ppFmtBuf,
; 524  : 		pcbOffset,
; 525  : 		pcbBufSize,
; 526  : 		hHeap,
; 527  : 		bRet)

	lea	r9, QWORD PTR wszDecoded$[rsp]
	lea	r8, OFFSET FLAT:$SG71083
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 528  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN4@FmtIopQuer@3
	xor	eax, eax
	jmp	$LN6@FmtIopQuer@3
$LN4@FmtIopQuer@3:

; 529  : 
; 530  : 	DecodeSystemPowerState(wszDecoded, sizeof wszDecoded, 
; 531  : 		pIoStack->Parameters.Power.State.SystemState);

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+24]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszDecoded$[rsp]
	call	?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z ; DecodeSystemPowerState

; 532  : 	FORMAT_ITEM(
; 533  : 		wszItemBuf, 
; 534  : 		L"Parameters.Power.State.SystemState =            %s",
; 535  : 		wszDecoded,
; 536  : 		ppFmtBuf,
; 537  : 		pcbOffset,
; 538  : 		pcbBufSize,
; 539  : 		hHeap,
; 540  : 		bRet)

	lea	r9, QWORD PTR wszDecoded$[rsp]
	lea	r8, OFFSET FLAT:$SG71085
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 541  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN3@FmtIopQuer@3
	xor	eax, eax
	jmp	$LN6@FmtIopQuer@3
$LN3@FmtIopQuer@3:

; 542  : 
; 543  : 	DecodeDevicePowerState(wszDecoded, sizeof wszDecoded, 
; 544  : 		pIoStack->Parameters.Power.State.DeviceState);

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+24]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszDecoded$[rsp]
	call	?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z ; DecodeDevicePowerState

; 545  : 	FORMAT_ITEM(
; 546  : 		wszItemBuf, 
; 547  : 		L"Parameters.Power.State.DeviceState =            %s",
; 548  : 		wszDecoded,
; 549  : 		ppFmtBuf,
; 550  : 		pcbOffset,
; 551  : 		pcbBufSize,
; 552  : 		hHeap,
; 553  : 		bRet)

	lea	r9, QWORD PTR wszDecoded$[rsp]
	lea	r8, OFFSET FLAT:$SG71087
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 554  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopQuer@3
	xor	eax, eax
	jmp	$LN6@FmtIopQuer@3
$LN2@FmtIopQuer@3:

; 555  : 
; 556  : 	DecodePowerAction(wszDecoded, sizeof wszDecoded, 
; 557  : 		pIoStack->Parameters.Power.ShutdownType);

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+32]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszDecoded$[rsp]
	call	?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z ; DecodePowerAction

; 558  : 	FORMAT_ITEM(
; 559  : 		wszItemBuf, 
; 560  : 		L"Parameters.Power.ShutdownType =                 %s",
; 561  : 		wszDecoded,
; 562  : 		ppFmtBuf,
; 563  : 		pcbOffset,
; 564  : 		pcbBufSize,
; 565  : 		hHeap,
; 566  : 		bRet)

	lea	r9, QWORD PTR wszDecoded$[rsp]
	lea	r8, OFFSET FLAT:$SG71089
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 567  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopQuer@3
	xor	eax, eax
	jmp	SHORT $LN6@FmtIopQuer@3
$LN1@FmtIopQuer@3:

; 568  : 
; 569  : 	return TRUE;

	mov	eax, 1
$LN6@FmtIopQuer@3:

; 570  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 520				; 00000208H
	ret	0
?FmtIopQueryPower@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopQueryPower
_TEXT	ENDS
pdata	SEGMENT
$pdata$?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z DD imagerel ?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z
	DD	imagerel ?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z+68
	DD	imagerel $unwind$?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszOutBuf$ = 64
cbBufSize$ = 72
DevPState$ = 80
?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z PROC ; DecodeDevicePowerState

; 208  : {

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 209  : 	return DecodeEnum(
; 210  : 		DevPState,
; 211  : 		0,
; 212  : 		pwszDevicePowerStateV,
; 213  : 		sizeof pwszDevicePowerStateV / sizeof (PWSTR),
; 214  : 		wszOutBuf,
; 215  : 		cbBufSize);

	mov	rax, QWORD PTR cbBufSize$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR wszOutBuf$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 6
	lea	r8, OFFSET FLAT:pwszDevicePowerStateV
	xor	edx, edx
	mov	ecx, DWORD PTR DevPState$[rsp]
	call	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z ; DecodeEnum

; 216  : }

	add	rsp, 56					; 00000038H
	ret	0
?DecodeDevicePowerState@@YAPEA_WPEA_W_KW4_DEVICE_POWER_STATE@@@Z ENDP ; DecodeDevicePowerState
_TEXT	ENDS
pdata	SEGMENT
$pdata$?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z DD imagerel ?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z
	DD	imagerel ?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z+68
	DD	imagerel $unwind$?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszOutBuf$ = 64
cbBufSize$ = 72
Action$ = 80
?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z PROC ; DecodePowerAction

; 240  : {

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 241  : 	return DecodeEnum(
; 242  : 		Action,
; 243  : 		0, 
; 244  : 		pwszPowerActionV,
; 245  : 		sizeof pwszPowerActionV / sizeof (PWSTR), 
; 246  : 		wszOutBuf, 
; 247  : 		cbBufSize);

	mov	rax, QWORD PTR cbBufSize$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR wszOutBuf$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 8
	lea	r8, OFFSET FLAT:pwszPowerActionV
	xor	edx, edx
	mov	ecx, DWORD PTR Action$[rsp]
	call	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z ; DecodeEnum

; 248  : }

	add	rsp, 56					; 00000038H
	ret	0
?DecodePowerAction@@YAPEA_WPEA_W_KW4POWER_ACTION@@@Z ENDP ; DecodePowerAction
_TEXT	ENDS
pdata	SEGMENT
$pdata$?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z DD imagerel ?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z
	DD	imagerel ?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z+68
	DD	imagerel $unwind$?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszOutBuf$ = 64
cbBufSize$ = 72
PSType$ = 80
?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z PROC ; DecodePowerStateType

; 255  : {

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 256  : 	return DecodeEnum(
; 257  : 		PSType,
; 258  : 		0,
; 259  : 		pwszPowerStateTypeV,
; 260  : 		sizeof pwszPowerStateTypeV / sizeof (PWSTR),
; 261  : 		wszOutBuf,
; 262  : 		cbBufSize);

	mov	rax, QWORD PTR cbBufSize$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR wszOutBuf$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 2
	lea	r8, OFFSET FLAT:pwszPowerStateTypeV
	xor	edx, edx
	mov	ecx, DWORD PTR PSType$[rsp]
	call	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z ; DecodeEnum

; 263  : }

	add	rsp, 56					; 00000038H
	ret	0
?DecodePowerStateType@@YAPEA_WPEA_W_KW4_POWER_STATE_TYPE@@@Z ENDP ; DecodePowerStateType
_TEXT	ENDS
pdata	SEGMENT
$pdata$?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z DD imagerel ?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z
	DD	imagerel ?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z+68
	DD	imagerel $unwind$?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszOutBuf$ = 64
cbBufSize$ = 72
SysPState$ = 80
?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z PROC ; DecodeSystemPowerState

; 287  : {

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 288  : 	return DecodeEnum(
; 289  : 		SysPState,
; 290  : 		0,
; 291  : 		pwszSystemPowerStateV,
; 292  : 		sizeof pwszSystemPowerStateV / sizeof (PWSTR),
; 293  : 		wszOutBuf,
; 294  : 		cbBufSize);

	mov	rax, QWORD PTR cbBufSize$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR wszOutBuf$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 8
	lea	r8, OFFSET FLAT:pwszSystemPowerStateV
	xor	edx, edx
	mov	ecx, DWORD PTR SysPState$[rsp]
	call	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z ; DecodeEnum

; 295  : }

	add	rsp, 56					; 00000038H
	ret	0
?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z ENDP ; DecodeSystemPowerState
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+197
	DD	imagerel $unwind$?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	041011bH
	DD	imagerel __GSHandlerCheck
	DD	01f0H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
wszDecoded$ = 288
__$ArrayPad$ = 496
ppFmtBuf$ = 528
pcbOffset$ = 536
pIoStack$ = 544
pcbBufSize$ = 552
hHeap$ = 560
?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopQueryVolumeInformation

; 582  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 520				; 00000208H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 583  : 	BOOL	bRet;
; 584  : 	WCHAR	wszDecoded[FMTIRP_ITEM_BUF_SIZE];
; 585  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 586  : 
; 587  : 	FORMAT_ITEM(
; 588  : 		wszItemBuf, 
; 589  : 		L"Parameters.QueryVolume.FsInformationClass =     %s",
; 590  : 		DecodeFsInfoClass(wszDecoded, sizeof wszDecoded, 
; 591  : 			pIoStack->Parameters.QueryVolume.FsInformationClass),
; 592  : 		ppFmtBuf,
; 593  : 		pcbOffset,
; 594  : 		pcbBufSize,
; 595  : 		hHeap,
; 596  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+16]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszDecoded$[rsp]
	call	?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z ; DecodeFsInfoClass
	mov	r9, rax
	lea	r8, OFFSET FLAT:$SG71101
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 597  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopQuer@4
	xor	eax, eax
	jmp	SHORT $LN2@FmtIopQuer@4
$LN1@FmtIopQuer@4:

; 598  : 
; 599  : 	return TRUE;

	mov	eax, 1
$LN2@FmtIopQuer@4:

; 600  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 520				; 00000208H
	ret	0
?FmtIopQueryVolumeInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopQueryVolumeInformation
_TEXT	ENDS
pdata	SEGMENT
$pdata$?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z DD imagerel ?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z
	DD	imagerel ?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z+71
	DD	imagerel $unwind$?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z DD 011301H
	DD	06213H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszOutBuf$ = 64
cbBufSize$ = 72
FsInfoClass$ = 80
?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z PROC ; DecodeFsInfoClass

; 224  : {

	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H

; 225  : 	return DecodeEnum(
; 226  : 		FsInfoClass,
; 227  : 		1, 
; 228  : 		pwszFsInfoClassV,
; 229  : 		sizeof pwszFsInfoClassV / sizeof (PWSTR), 
; 230  : 		wszOutBuf, 
; 231  : 		cbBufSize);

	mov	rax, QWORD PTR cbBufSize$[rsp]
	mov	QWORD PTR [rsp+40], rax
	mov	rax, QWORD PTR wszOutBuf$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9d, 10
	lea	r8, OFFSET FLAT:pwszFsInfoClassV
	mov	edx, 1
	mov	ecx, DWORD PTR FsInfoClass$[rsp]
	call	?DecodeEnum@@YAPEA_WHHQEAPEA_WIPEA_W_K@Z ; DecodeEnum

; 232  : }

	add	rsp, 56					; 00000038H
	ret	0
?DecodeFsInfoClass@@YAPEA_WPEA_W_KW4_FSINFOCLASS@@@Z ENDP ; DecodeFsInfoClass
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+383
	DD	imagerel $unwind$?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	025011bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
__$ArrayPad$ = 280
ppFmtBuf$ = 304
pcbOffset$ = 312
pIoStack$ = 320
pcbBufSize$ = 328
hHeap$ = 336
?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopRead

; 609  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 296				; 00000128H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 610  : 	BOOL	bRet;
; 611  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 612  : 
; 613  : 	FORMAT_ITEM(
; 614  : 		wszItemBuf, 
; 615  : 		L"Parameters.Read.Length =                        %#x",
; 616  : 		pIoStack->Parameters.Read.Length,
; 617  : 		ppFmtBuf,
; 618  : 		pcbOffset,
; 619  : 		pcbBufSize,
; 620  : 		hHeap,
; 621  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG71112
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 622  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN3@FmtIopRead
	xor	eax, eax
	jmp	$LN4@FmtIopRead
$LN3@FmtIopRead:

; 623  : 
; 624  : 	FORMAT_ITEM(
; 625  : 		wszItemBuf, 
; 626  : 		L"Parameters.Read.Key =                           %#x",
; 627  : 		pIoStack->Parameters.Read.Key,
; 628  : 		ppFmtBuf,
; 629  : 		pcbOffset,
; 630  : 		pcbBufSize,
; 631  : 		hHeap,
; 632  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+16]
	lea	r8, OFFSET FLAT:$SG71114
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 633  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopRead
	xor	eax, eax
	jmp	SHORT $LN4@FmtIopRead
$LN2@FmtIopRead:

; 634  : 
; 635  : 	FORMAT_ITEM(
; 636  : 		wszItemBuf, 
; 637  : 		L"Parameters.Read.ByteOffset =                    %#I64x",
; 638  : 		pIoStack->Parameters.Read.ByteOffset.QuadPart,
; 639  : 		ppFmtBuf,
; 640  : 		pcbOffset,
; 641  : 		pcbBufSize,
; 642  : 		hHeap,
; 643  : 		bRet)

	mov	r9, QWORD PTR pIoStack$[rsp]
	mov	r9, QWORD PTR [r9+24]
	lea	r8, OFFSET FLAT:$SG71116
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 644  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopRead
	xor	eax, eax
	jmp	SHORT $LN4@FmtIopRead
$LN1@FmtIopRead:

; 645  : 
; 646  : 	return TRUE;

	mov	eax, 1
$LN4@FmtIopRead:

; 647  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 296				; 00000128H
	ret	0
?FmtIopRead@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopRead
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+805
	DD	imagerel $unwind$?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	025011bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
__$ArrayPad$ = 280
ppFmtBuf$ = 304
pcbOffset$ = 312
pIoStack$ = 320
pcbBufSize$ = 328
hHeap$ = 336
?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopSetInformation

; 657  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 296				; 00000128H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 658  : 	BOOL	bRet;
; 659  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 660  : 
; 661  : 	FORMAT_ITEM(
; 662  : 		wszItemBuf, 
; 663  : 		L"Parameters.SetFile.Length =                     %#x",
; 664  : 		pIoStack->Parameters.SetFile.Length,
; 665  : 		ppFmtBuf,
; 666  : 		pcbOffset,
; 667  : 		pcbBufSize,
; 668  : 		hHeap,
; 669  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG71127
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 670  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN7@FmtIopSetI
	xor	eax, eax
	jmp	$LN8@FmtIopSetI
$LN7@FmtIopSetI:

; 671  : 
; 672  : 	FORMAT_ITEM(
; 673  : 		wszItemBuf, 
; 674  : 		L"Parameters.SetFile.FileInformationClass =       %d",
; 675  : 		pIoStack->Parameters.SetFile.FileInformationClass,
; 676  : 		ppFmtBuf,
; 677  : 		pcbOffset,
; 678  : 		pcbBufSize,
; 679  : 		hHeap,
; 680  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+16]
	lea	r8, OFFSET FLAT:$SG71129
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 681  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN6@FmtIopSetI
	xor	eax, eax
	jmp	$LN8@FmtIopSetI
$LN6@FmtIopSetI:

; 682  : 
; 683  : 	FORMAT_ITEM(
; 684  : 		wszItemBuf, 
; 685  : 		L"Parameters.SetFile.FileObject =                 %#p",
; 686  : 		pIoStack->Parameters.SetFile.FileObject,
; 687  : 		ppFmtBuf,
; 688  : 		pcbOffset,
; 689  : 		pcbBufSize,
; 690  : 		hHeap,
; 691  : 		bRet)

	mov	r9, QWORD PTR pIoStack$[rsp]
	mov	r9, QWORD PTR [r9+24]
	lea	r8, OFFSET FLAT:$SG71131
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 692  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN5@FmtIopSetI
	xor	eax, eax
	jmp	$LN8@FmtIopSetI
$LN5@FmtIopSetI:

; 693  : 
; 694  : 	FORMAT_ITEM(
; 695  : 		wszItemBuf, 
; 696  : 		L"Parameters.SetFile.ReplaceIfExists =            %d",
; 697  : 		pIoStack->Parameters.SetFile.ReplaceIfExists,
; 698  : 		ppFmtBuf,
; 699  : 		pcbOffset,
; 700  : 		pcbBufSize,
; 701  : 		hHeap,
; 702  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	movzx	r9d, BYTE PTR [rax+32]
	lea	r8, OFFSET FLAT:$SG71133
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 703  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN4@FmtIopSetI
	xor	eax, eax
	jmp	$LN8@FmtIopSetI
$LN4@FmtIopSetI:

; 704  : 
; 705  : 	FORMAT_ITEM(
; 706  : 		wszItemBuf, 
; 707  : 		L"Parameters.SetFile.AdvanceOnly =                %d",
; 708  : 		pIoStack->Parameters.SetFile.AdvanceOnly,
; 709  : 		ppFmtBuf,
; 710  : 		pcbOffset,
; 711  : 		pcbBufSize,
; 712  : 		hHeap,
; 713  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	movzx	r9d, BYTE PTR [rax+33]
	lea	r8, OFFSET FLAT:$SG71135
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 714  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN3@FmtIopSetI
	xor	eax, eax
	jmp	$LN8@FmtIopSetI
$LN3@FmtIopSetI:

; 715  : 
; 716  : 	FORMAT_ITEM(
; 717  : 		wszItemBuf, 
; 718  : 		L"Parameters.SetFile.ClusterCount =               %#x",
; 719  : 		pIoStack->Parameters.SetFile.ClusterCount,
; 720  : 		ppFmtBuf,
; 721  : 		pcbOffset,
; 722  : 		pcbBufSize,
; 723  : 		hHeap,
; 724  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+32]
	lea	r8, OFFSET FLAT:$SG71137
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 725  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopSetI
	xor	eax, eax
	jmp	SHORT $LN8@FmtIopSetI
$LN2@FmtIopSetI:

; 726  : 
; 727  : 	FORMAT_ITEM(
; 728  : 		wszItemBuf, 
; 729  : 		L"Parameters.SetFile.DeleteHandle =               %#x",
; 730  : 		pIoStack->Parameters.SetFile.DeleteHandle,
; 731  : 		ppFmtBuf,
; 732  : 		pcbOffset,
; 733  : 		pcbBufSize,
; 734  : 		hHeap,
; 735  : 		bRet)

	mov	r9, QWORD PTR pIoStack$[rsp]
	mov	r9, QWORD PTR [r9+32]
	lea	r8, OFFSET FLAT:$SG71139
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 736  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopSetI
	xor	eax, eax
	jmp	SHORT $LN8@FmtIopSetI
$LN1@FmtIopSetI:

; 737  : 
; 738  : 	return TRUE;

	mov	eax, 1
$LN8@FmtIopSetI:

; 739  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 296				; 00000128H
	ret	0
?FmtIopSetInformation@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopSetInformation
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+197
	DD	imagerel $unwind$?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	041011bH
	DD	imagerel __GSHandlerCheck
	DD	01f0H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
wszDecoded$ = 288
__$ArrayPad$ = 496
ppFmtBuf$ = 528
pcbOffset$ = 536
pIoStack$ = 544
pcbBufSize$ = 552
hHeap$ = 560
?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopWaitWake

; 749  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 520				; 00000208H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 750  : 	BOOL	bRet;
; 751  : 	WCHAR	wszDecoded[FMTIRP_ITEM_BUF_SIZE];
; 752  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 753  : 
; 754  : 	FORMAT_ITEM(
; 755  : 		wszItemBuf, 
; 756  : 		L"Parameters.WaitWake.PowerState =                %s",
; 757  : 		DecodeSystemPowerState(
; 758  : 			wszDecoded,
; 759  : 			sizeof wszDecoded,
; 760  : 			pIoStack->Parameters.WaitWake.PowerState),
; 761  : 		ppFmtBuf,
; 762  : 		pcbOffset,
; 763  : 		pcbBufSize,
; 764  : 		hHeap,
; 765  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r8d, DWORD PTR [rax+8]
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszDecoded$[rsp]
	call	?DecodeSystemPowerState@@YAPEA_WPEA_W_KW4_SYSTEM_POWER_STATE@@@Z ; DecodeSystemPowerState
	mov	r9, rax
	lea	r8, OFFSET FLAT:$SG71151
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 766  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopWait
	xor	eax, eax
	jmp	SHORT $LN2@FmtIopWait
$LN1@FmtIopWait:

; 767  : 
; 768  : 	return TRUE;

	mov	eax, 1
$LN2@FmtIopWait:

; 769  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 520				; 00000208H
	ret	0
?FmtIopWaitWake@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopWaitWake
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD imagerel ?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
	DD	imagerel ?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z+383
	DD	imagerel $unwind$?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z DD 022d19H
	DD	025011bH
	DD	imagerel __GSHandlerCheck
	DD	0118H
; Function compile flags: /Odtp
xdata	ENDS
_TEXT	SEGMENT
wszItemBuf$ = 64
bRet$ = 272
__$ArrayPad$ = 280
ppFmtBuf$ = 304
pcbOffset$ = 312
pIoStack$ = 320
pcbBufSize$ = 328
hHeap$ = 336
?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z PROC ; FmtIopWrite

; 778  : {

	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 296				; 00000128H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 779  : 	BOOL	bRet;
; 780  : 	WCHAR	wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 781  : 
; 782  : 	FORMAT_ITEM(
; 783  : 		wszItemBuf, 
; 784  : 		L"Parameters.Write.Length =                       %#x",
; 785  : 		pIoStack->Parameters.Write.Length,
; 786  : 		ppFmtBuf,
; 787  : 		pcbOffset,
; 788  : 		pcbBufSize,
; 789  : 		hHeap,
; 790  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+8]
	lea	r8, OFFSET FLAT:$SG71162
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 791  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN3@FmtIopWrit
	xor	eax, eax
	jmp	$LN4@FmtIopWrit
$LN3@FmtIopWrit:

; 792  : 
; 793  : 	FORMAT_ITEM(
; 794  : 		wszItemBuf, 
; 795  : 		L"Parameters.Write.Key =                          %#x",
; 796  : 		pIoStack->Parameters.Write.Key,
; 797  : 		ppFmtBuf,
; 798  : 		pcbOffset,
; 799  : 		pcbBufSize,
; 800  : 		hHeap,
; 801  : 		bRet)

	mov	rax, QWORD PTR pIoStack$[rsp]
	mov	r9d, DWORD PTR [rax+16]
	lea	r8, OFFSET FLAT:$SG71164
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 802  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN2@FmtIopWrit
	xor	eax, eax
	jmp	SHORT $LN4@FmtIopWrit
$LN2@FmtIopWrit:

; 803  : 
; 804  : 	FORMAT_ITEM(
; 805  : 		wszItemBuf, 
; 806  : 		L"Parameters.Write.ByteOffset =                   %#I64x",
; 807  : 		pIoStack->Parameters.Write.ByteOffset,
; 808  : 		ppFmtBuf,
; 809  : 		pcbOffset,
; 810  : 		pcbBufSize,
; 811  : 		hHeap,
; 812  : 		bRet)

	mov	r9, QWORD PTR pIoStack$[rsp]
	mov	r9, QWORD PTR [r9+24]
	lea	r8, OFFSET FLAT:$SG71166
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW
	mov	r11, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+32], r11
	mov	r9, QWORD PTR pcbBufSize$[rsp]
	mov	r8, QWORD PTR pcbOffset$[rsp]
	mov	rdx, QWORD PTR ppFmtBuf$[rsp]
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?AppendString@@YAHPEA_WPEAPEADPEA_K2PEAX@Z ; AppendString
	mov	DWORD PTR bRet$[rsp], eax

; 813  : 	if (!bRet) return FALSE;

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FmtIopWrit
	xor	eax, eax
	jmp	SHORT $LN4@FmtIopWrit
$LN1@FmtIopWrit:

; 814  : 
; 815  : 	return TRUE;

	mov	eax, 1
$LN4@FmtIopWrit:

; 816  : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 296				; 00000128H
	ret	0
?FmtIopWrite@@YAHPEAPEADPEA_KPEAU_IO_STACK_LOCATION@@1PEAX@Z ENDP ; FmtIopWrite
_TEXT	ENDS
PUBLIC	?FormatIrpWlhX64@@YAHPEADPEAPEA_W@Z		; FormatIrpWlhX64
pdata	SEGMENT
$pdata$?FormatIrpWlhX64@@YAHPEADPEAPEA_W@Z DD imagerel $LN3
	DD	imagerel $LN3+34
	DD	imagerel $unwind$?FormatIrpWlhX64@@YAHPEADPEAPEA_W@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FormatIrpWlhX64@@YAHPEADPEAPEA_W@Z DD 010e01H
	DD	0420eH
; Function compile flags: /Odtp
; File b:\programm\wntsys\testfilter\release\1_1\source\krnlutils\wlhx64.cpp
xdata	ENDS
_TEXT	SEGMENT
pIrpData$ = 48
ppFIrp$ = 56
?FormatIrpWlhX64@@YAHPEADPEAPEA_W@Z PROC		; FormatIrpWlhX64

; 37   : {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 40					; 00000028H

; 38   : 	return FormatIrpGeneric(
; 39   : 		pIrpData,
; 40   : 		ppFIrp);

	mov	rdx, QWORD PTR ppFIrp$[rsp]
	mov	rcx, QWORD PTR pIrpData$[rsp]
	call	?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z	; FormatIrpGeneric

; 41   : }

	add	rsp, 40					; 00000028H
	ret	0
?FormatIrpWlhX64@@YAHPEADPEAPEA_W@Z ENDP		; FormatIrpWlhX64
_TEXT	ENDS
PUBLIC	__$ArrayPad$
pdata	SEGMENT
$pdata$?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z DD imagerel ?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z
	DD	imagerel ?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z+2357
	DD	imagerel $unwind$?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z
pdata	ENDS
xdata	SEGMENT
$unwind$?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z DD 022319H
	DD	0430111H
	DD	imagerel __GSHandlerCheck
	DD	0208H
; Function compile flags: /Odtp
; File b:\programm\wntsys\testfilter\release\1_1\source\krnlutils\platfdepcompile.cpp
xdata	ENDS
_TEXT	SEGMENT
Irp$ = 48
cbOffset$ = 256
cbItemLen$ = 264
hHeap$ = 272
wszItemBuf$ = 288
bRet$ = 496
pFIrp$ = 504
BufSize$ = 512
__$ArrayPad$ = 520
pIrpData$ = 544
ppFIrp$ = 552
?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z PROC		; FormatIrpGeneric

; 1038 : {

	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 536				; 00000218H
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rsp
	mov	QWORD PTR __$ArrayPad$[rsp], rax

; 1039 : 	BOOL		bRet ;
; 1040 : 	SIZE_T		BufSize;
; 1041 : 	HANDLE		hHeap;
; 1042 : 	IRP			Irp;
; 1043 : 	WCHAR		wszItemBuf[FMTIRP_ITEM_BUF_SIZE];
; 1044 : 	PCHAR		pFIrp;
; 1045 : 
; 1046 : 
; 1047 : 	// We cannot be sure that the address in pIrpData satisfies the
; 1048 : 	// alignment requirement for the IRP type, so we allocate Irp
; 1049 : 	// on the stack, which is properly aligned and then we copy
; 1050 : 	// the data pointed by pIrpData into it.
; 1051 : 	//
; 1052 : 	memcpy(&Irp, pIrpData, sizeof Irp);

	mov	r8d, 208				; 000000d0H
	mov	rdx, QWORD PTR pIrpData$[rsp]
	lea	rcx, QWORD PTR Irp$[rsp]
	call	memcpy

; 1053 : 
; 1054 : 	hHeap = GetProcessHeap();

	call	QWORD PTR __imp_GetProcessHeap
	mov	QWORD PTR hHeap$[rsp], rax

; 1055 : 
; 1056 : 	if (hHeap == NULL) return FALSE;

	cmp	QWORD PTR hHeap$[rsp], 0
	jne	SHORT $LN31@FormatIrpG
	xor	eax, eax
	jmp	$LN32@FormatIrpG
$LN31@FormatIrpG:

; 1057 : 
; 1058 : 	BufSize = FMTIRP_INITIAL_BUF_SIZE;

	mov	QWORD PTR BufSize$[rsp], 1024		; 00000400H

; 1059 : 	pFIrp = (PCHAR) AllocFromHeap(hHeap, BufSize);

	mov	rdx, QWORD PTR BufSize$[rsp]
	mov	rcx, QWORD PTR hHeap$[rsp]
	call	?AllocFromHeap@@YAPEAXPEAX_K@Z		; AllocFromHeap
	mov	QWORD PTR pFIrp$[rsp], rax

; 1060 : 
; 1061 : 	if (pFIrp == NULL) return FALSE;

	cmp	QWORD PTR pFIrp$[rsp], 0
	jne	SHORT $LN30@FormatIrpG
	xor	eax, eax
	jmp	$LN32@FormatIrpG
$LN30@FormatIrpG:

; 1062 : 	
; 1063 : 	bRet = FALSE;

	mov	DWORD PTR bRet$[rsp], 0

; 1064 : 	SIZE_T cbOffset = 0;

	mov	QWORD PTR cbOffset$[rsp], 0

; 1065 : 
; 1066 : 	StringCbPrintfW(
; 1067 : 		wszItemBuf,
; 1068 : 		sizeof wszItemBuf,
; 1069 : 		L"MdlAddress =                                    %#p",
; 1070 : 		Irp.MdlAddress);

	mov	r9, QWORD PTR Irp$[rsp+8]
	lea	r8, OFFSET FLAT:$SG71268
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1071 : 	SIZE_T cbItemLen;
; 1072 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1073 : 
; 1074 : 	// Count the null terminator into the length
; 1075 : 	//
; 1076 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1077 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1078 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN29@FormatIrpG
	jmp	$LN28@FormatIrpG

; 1079 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN29@FormatIrpG:

; 1080 : 
; 1081 : 	StringCbPrintfW(
; 1082 : 		wszItemBuf,
; 1083 : 		sizeof wszItemBuf,
; 1084 : 		L"Flags =                                         %#x",
; 1085 : 		Irp.Flags);

	mov	r9d, DWORD PTR Irp$[rsp+16]
	lea	r8, OFFSET FLAT:$SG71276
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1086 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1087 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1088 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1089 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN27@FormatIrpG
	jmp	$LN26@FormatIrpG

; 1090 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN27@FormatIrpG:

; 1091 : 
; 1092 : 	StringCbPrintfW(
; 1093 : 		wszItemBuf,
; 1094 : 		sizeof wszItemBuf,
; 1095 : 		L"AssociatedIrp.MasterIrp =                       %#p",
; 1096 : 		Irp.AssociatedIrp.MasterIrp);

	mov	r9, QWORD PTR Irp$[rsp+24]
	lea	r8, OFFSET FLAT:$SG71282
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1097 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1098 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1099 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1100 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN25@FormatIrpG
	jmp	$LN24@FormatIrpG

; 1101 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN25@FormatIrpG:

; 1102 : 
; 1103 : 	StringCbPrintfW(
; 1104 : 		wszItemBuf,
; 1105 : 		sizeof wszItemBuf,
; 1106 : 		L"AssociatedIrp.SystemBuffer =                    %#p",
; 1107 : 		Irp.AssociatedIrp.SystemBuffer);

	mov	r9, QWORD PTR Irp$[rsp+24]
	lea	r8, OFFSET FLAT:$SG71288
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1108 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1109 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1110 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1111 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN23@FormatIrpG
	jmp	$LN22@FormatIrpG

; 1112 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN23@FormatIrpG:

; 1113 : 
; 1114 : 	StringCbPrintfW(
; 1115 : 		wszItemBuf,
; 1116 : 		sizeof wszItemBuf,
; 1117 : 		L"IoStatus.Status =                               %#x",
; 1118 : 		Irp.IoStatus.Status);

	mov	r9d, DWORD PTR Irp$[rsp+48]
	lea	r8, OFFSET FLAT:$SG71294
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1119 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1120 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1121 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1122 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN21@FormatIrpG
	jmp	$LN20@FormatIrpG

; 1123 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN21@FormatIrpG:

; 1124 : 
; 1125 : 	StringCbPrintfW(
; 1126 : 		wszItemBuf,
; 1127 : 		sizeof wszItemBuf,
; 1128 : 		L"IoStatus.Information =                          %#x",
; 1129 : 		Irp.IoStatus.Information);

	mov	r9, QWORD PTR Irp$[rsp+56]
	lea	r8, OFFSET FLAT:$SG71300
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1130 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1131 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1132 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1133 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN19@FormatIrpG
	jmp	$LN18@FormatIrpG

; 1134 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN19@FormatIrpG:

; 1135 : 
; 1136 : 	StringCbPrintfW(
; 1137 : 		wszItemBuf,
; 1138 : 		sizeof wszItemBuf,
; 1139 : 		L"RequestorMode =                                 %d",
; 1140 : 		Irp.RequestorMode);

	movsx	r9d, BYTE PTR Irp$[rsp+64]
	lea	r8, OFFSET FLAT:$SG71306
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1141 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1142 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1143 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1144 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN17@FormatIrpG
	jmp	$LN16@FormatIrpG

; 1145 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN17@FormatIrpG:

; 1146 : 
; 1147 : 	StringCbPrintfW(
; 1148 : 		wszItemBuf,
; 1149 : 		sizeof wszItemBuf,
; 1150 : 		L"PendingReturned =                               %d",
; 1151 : 		Irp.PendingReturned);

	movzx	r9d, BYTE PTR Irp$[rsp+65]
	lea	r8, OFFSET FLAT:$SG71312
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1152 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1153 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1154 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1155 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN15@FormatIrpG
	jmp	$LN14@FormatIrpG

; 1156 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN15@FormatIrpG:

; 1157 : 
; 1158 : 	StringCbPrintfW(
; 1159 : 		wszItemBuf,
; 1160 : 		sizeof wszItemBuf,
; 1161 : 		L"Cancel =                                        %d",
; 1162 : 		Irp.Cancel);

	movzx	r9d, BYTE PTR Irp$[rsp+68]
	lea	r8, OFFSET FLAT:$SG71318
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1163 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1164 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1165 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1166 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN13@FormatIrpG
	jmp	$LN12@FormatIrpG

; 1167 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN13@FormatIrpG:

; 1168 : 
; 1169 : 	StringCbPrintfW(
; 1170 : 		wszItemBuf,
; 1171 : 		sizeof wszItemBuf,
; 1172 : 		L"CancelIrql =                                    %d",
; 1173 : 		Irp.CancelIrql);

	movzx	r9d, BYTE PTR Irp$[rsp+69]
	lea	r8, OFFSET FLAT:$SG71324
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1174 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1175 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1176 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1177 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN11@FormatIrpG
	jmp	$LN10@FormatIrpG

; 1178 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN11@FormatIrpG:

; 1179 : 
; 1180 : 	StringCbPrintfW(
; 1181 : 		wszItemBuf,
; 1182 : 		sizeof wszItemBuf,
; 1183 : 		L"CancelRoutine =                                 %#p",
; 1184 : 		Irp.CancelRoutine);

	mov	r9, QWORD PTR Irp$[rsp+104]
	lea	r8, OFFSET FLAT:$SG71330
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1185 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1186 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1187 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1188 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN9@FormatIrpG
	jmp	$LN8@FormatIrpG

; 1189 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN9@FormatIrpG:

; 1190 : 
; 1191 : 	StringCbPrintfW(
; 1192 : 		wszItemBuf,
; 1193 : 		sizeof wszItemBuf,
; 1194 : 		L"UserBuffer =                                    %#p",
; 1195 : 		Irp.UserBuffer);

	mov	r9, QWORD PTR Irp$[rsp+112]
	lea	r8, OFFSET FLAT:$SG71336
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1196 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1197 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1198 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1199 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN7@FormatIrpG
	jmp	$LN6@FormatIrpG

; 1200 : 		goto CLEANUP;

	jmp	$CLEANUP$71274
$LN7@FormatIrpG:

; 1201 : 
; 1202 : 	StringCbPrintfW(
; 1203 : 		wszItemBuf,
; 1204 : 		sizeof wszItemBuf,
; 1205 : 		L"Tail.Overlay.Thread =                           %#p",
; 1206 : 		Irp.Tail.Overlay.Thread);

	mov	r9, QWORD PTR Irp$[rsp+152]
	lea	r8, OFFSET FLAT:$SG71342
	mov	edx, 202				; 000000caH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbPrintfW@@YAJPEA_W_KPEB_WZZ	; StringCbPrintfW

; 1207 : 	StringCbLength(wszItemBuf, STRSAFE_MAX_CCH, (size_t*) &cbItemLen);

	lea	r8, QWORD PTR cbItemLen$[rsp]
	mov	edx, 2147483647				; 7fffffffH
	lea	rcx, QWORD PTR wszItemBuf$[rsp]
	call	?StringCbLengthW@@YAJPEB_W_KPEA_K@Z	; StringCbLengthW

; 1208 : 	cbItemLen += sizeof (WCHAR);

	mov	rax, QWORD PTR cbItemLen$[rsp]
	add	rax, 2
	mov	QWORD PTR cbItemLen$[rsp], rax

; 1209 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1210 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN5@FormatIrpG
	jmp	SHORT $LN4@FormatIrpG

; 1211 : 		goto CLEANUP;

	jmp	SHORT $CLEANUP$71274
$LN5@FormatIrpG:

; 1212 : 
; 1213 : 	// Add the extra null terminator which marks the text end
; 1214 : 	//
; 1215 : 	wszItemBuf[0] = L'\0';

	xor	eax, eax
	mov	WORD PTR wszItemBuf$[rsp], ax

; 1216 : 	cbItemLen = sizeof (WCHAR);

	mov	QWORD PTR cbItemLen$[rsp], 2

; 1217 : 	if (!CopyToBuffer(&pFIrp, &cbOffset, (PCHAR) wszItemBuf, cbItemLen, 
; 1218 : 		&BufSize, hHeap)) 

	mov	rax, QWORD PTR hHeap$[rsp]
	mov	QWORD PTR [rsp+40], rax
	lea	rax, QWORD PTR BufSize$[rsp]
	mov	QWORD PTR [rsp+32], rax
	mov	r9, QWORD PTR cbItemLen$[rsp]
	lea	r8, QWORD PTR wszItemBuf$[rsp]
	lea	rdx, QWORD PTR cbOffset$[rsp]
	lea	rcx, QWORD PTR pFIrp$[rsp]
	call	?CopyToBuffer@@YAHPEAPEADPEA_KPEAD_K1PEAX@Z ; CopyToBuffer
	test	eax, eax
	jne	SHORT $LN3@FormatIrpG
	jmp	SHORT $LN2@FormatIrpG

; 1219 : 		goto CLEANUP;

	jmp	SHORT $CLEANUP$71274
$LN3@FormatIrpG:

; 1220 : 
; 1221 : 	// If we made it here, success.
; 1222 : 	//
; 1223 : 	*ppFIrp = (PWCHAR) pFIrp;

	mov	rcx, QWORD PTR ppFIrp$[rsp]
	mov	rax, QWORD PTR pFIrp$[rsp]
	mov	QWORD PTR [rcx], rax

; 1224 : 	bRet = TRUE;

	mov	DWORD PTR bRet$[rsp], 1
$LN2@FormatIrpG:
$LN4@FormatIrpG:
$LN6@FormatIrpG:
$LN8@FormatIrpG:
$LN10@FormatIrpG:
$LN12@FormatIrpG:
$LN14@FormatIrpG:
$LN16@FormatIrpG:
$LN18@FormatIrpG:
$LN20@FormatIrpG:
$LN22@FormatIrpG:
$LN24@FormatIrpG:
$LN26@FormatIrpG:
$LN28@FormatIrpG:
$CLEANUP$71274:

; 1225 : 
; 1226 : CLEANUP:
; 1227 : 	if (!bRet) {

	cmp	DWORD PTR bRet$[rsp], 0
	jne	SHORT $LN1@FormatIrpG

; 1228 : 		HeapFree(hHeap, 0, pFIrp);

	mov	r8, QWORD PTR pFIrp$[rsp]
	xor	edx, edx
	mov	rcx, QWORD PTR hHeap$[rsp]
	call	QWORD PTR __imp_HeapFree
$LN1@FormatIrpG:

; 1229 : 	}
; 1230 : 	return bRet;

	mov	eax, DWORD PTR bRet$[rsp]
$LN32@FormatIrpG:

; 1231 : }

	mov	rcx, QWORD PTR __$ArrayPad$[rsp]
	xor	rcx, rsp
	call	__security_check_cookie
	add	rsp, 536				; 00000218H
	ret	0
?FormatIrpGeneric@@YAHPEADPEAPEA_W@Z ENDP		; FormatIrpGeneric
_TEXT	ENDS
PUBLIC	?IoStackSizeWlhX64@@YA_KXZ			; IoStackSizeWlhX64
; Function compile flags: /Odtp
; File b:\programm\wntsys\testfilter\release\1_1\source\krnlutils\wlhx64.cpp
_TEXT	SEGMENT
?IoStackSizeWlhX64@@YA_KXZ PROC				; IoStackSizeWlhX64

; 47   : 	return sizeof (IO_STACK_LOCATION);

	mov	rax, 72					; 00000048H

; 48   : }

	ret	0
?IoStackSizeWlhX64@@YA_KXZ ENDP				; IoStackSizeWlhX64
_TEXT	ENDS
PUBLIC	?IrpSizeWlhX64@@YA_KXZ				; IrpSizeWlhX64
; Function compile flags: /Odtp
_TEXT	SEGMENT
?IrpSizeWlhX64@@YA_KXZ PROC				; IrpSizeWlhX64

; 54   : 	return sizeof (IRP);

	mov	rax, 208				; 000000d0H

; 55   : }

	ret	0
?IrpSizeWlhX64@@YA_KXZ ENDP				; IrpSizeWlhX64
_TEXT	ENDS
END
